{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, Input, Injectable, Component, HostBinding, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction TabsetComponent_li_1_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵlistener(\"click\", function TabsetComponent_li_1_span_4_Template_span_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const tabz_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      $event.preventDefault();\n      return i0.ɵɵresetView(ctx_r4.removeTab(tabz_r1));\n    });\n    i0.ɵɵtext(1, \" \\u274C\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a1) {\n  return [\"nav-item\", a1];\n};\n\nfunction TabsetComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵlistener(\"keydown\", function TabsetComponent_li_1_Template_li_keydown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const i_r2 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.keyNavActions($event, i_r2));\n    });\n    i0.ɵɵelementStart(1, \"a\", 4);\n    i0.ɵɵlistener(\"click\", function TabsetComponent_li_1_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const tabz_r1 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(tabz_r1.active = true);\n    });\n    i0.ɵɵelementStart(2, \"span\", 5);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, TabsetComponent_li_1_span_4_Template, 2, 0, \"span\", 6);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const tabz_r1 = ctx.$implicit;\n    i0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, tabz_r1.customClass || \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", tabz_r1.active)(\"disabled\", tabz_r1.disabled);\n    i0.ɵɵattribute(\"aria-controls\", tabz_r1.id ? tabz_r1.id : \"\")(\"aria-selected\", !!tabz_r1.active)(\"id\", tabz_r1.id ? tabz_r1.id + \"-link\" : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTransclude\", tabz_r1.headingRef);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(tabz_r1.heading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tabz_r1.removable);\n  }\n}\n\nconst _c1 = [\"*\"];\nlet NgTranscludeDirective = /*#__PURE__*/(() => {\n  class NgTranscludeDirective {\n    constructor(viewRef) {\n      this.viewRef = viewRef;\n    }\n\n    set ngTransclude(templateRef) {\n      this._ngTransclude = templateRef;\n\n      if (templateRef) {\n        this.viewRef.createEmbeddedView(templateRef);\n      }\n    } // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    get ngTransclude() {\n      return this._ngTransclude;\n    }\n\n  }\n\n  NgTranscludeDirective.ɵfac = function NgTranscludeDirective_Factory(t) {\n    return new (t || NgTranscludeDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n\n  NgTranscludeDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: NgTranscludeDirective,\n    selectors: [[\"\", \"ngTransclude\", \"\"]],\n    inputs: {\n      ngTransclude: \"ngTransclude\"\n    }\n  });\n  return NgTranscludeDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TabsetConfig = /*#__PURE__*/(() => {\n  class TabsetConfig {\n    constructor() {\n      /** provides default navigation context class: 'tabs' or 'pills' */\n      this.type = 'tabs';\n      /** provides possibility to set keyNavigations enable or disable, by default is enable */\n\n      this.isKeysAllowed = true;\n      /** aria label for tab list */\n\n      this.ariaLabel = 'Tabs';\n    }\n\n  }\n\n  TabsetConfig.ɵfac = function TabsetConfig_Factory(t) {\n    return new (t || TabsetConfig)();\n  };\n\n  TabsetConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TabsetConfig,\n    factory: TabsetConfig.ɵfac,\n    providedIn: 'root'\n  });\n  return TabsetConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\n\n\nlet TabsetComponent = /*#__PURE__*/(() => {\n  class TabsetComponent {\n    constructor(config, renderer, elementRef) {\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.clazz = true;\n      this.tabs = [];\n      this.classMap = {};\n      /** aria label for tab list */\n\n      this.ariaLabel = 'Tabs';\n      this.isDestroyed = false;\n      this._vertical = false;\n      this._justified = false;\n      this._type = 'tabs';\n      this._isKeysAllowed = true;\n      Object.assign(this, config);\n    }\n    /** if true tabs will be placed vertically */\n\n\n    get vertical() {\n      return this._vertical;\n    }\n\n    set vertical(value) {\n      this._vertical = value;\n      this.setClassMap();\n    }\n    /** if true tabs fill the container and have a consistent width */\n\n\n    get justified() {\n      return this._justified;\n    }\n\n    set justified(value) {\n      this._justified = value;\n      this.setClassMap();\n    }\n    /** navigation context class: 'tabs' or 'pills' */\n\n\n    get type() {\n      return this._type;\n    }\n\n    set type(value) {\n      this._type = value;\n      this.setClassMap();\n    }\n\n    get isKeysAllowed() {\n      return this._isKeysAllowed;\n    }\n\n    set isKeysAllowed(value) {\n      this._isKeysAllowed = value;\n    }\n\n    ngOnDestroy() {\n      this.isDestroyed = true;\n    }\n\n    addTab(tab) {\n      this.tabs.push(tab);\n      tab.active = this.tabs.length === 1 && !tab.active;\n    }\n\n    removeTab(tab, options = {\n      reselect: true,\n      emit: true\n    }) {\n      const index = this.tabs.indexOf(tab);\n\n      if (index === -1 || this.isDestroyed) {\n        return;\n      } // Select a new tab if the tab to be removed is selected and not destroyed\n\n\n      if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n        const newActiveIndex = this.getClosestTabIndex(index);\n        this.tabs[newActiveIndex].active = true;\n      }\n\n      if (options.emit) {\n        tab.removed.emit(tab);\n      }\n\n      this.tabs.splice(index, 1);\n\n      if (tab.elementRef.nativeElement.parentNode) {\n        this.renderer.removeChild(tab.elementRef.nativeElement.parentNode, tab.elementRef.nativeElement);\n      }\n    }\n\n    keyNavActions(event, index) {\n      if (!this.isKeysAllowed) {\n        return;\n      }\n\n      const list = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link')); // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n\n      if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n        event.preventDefault();\n        const currentTab = list[index % list.length];\n        currentTab.click();\n        return;\n      }\n\n      if (event.keyCode === 39 || event.key === 'RightArrow') {\n        let nextTab;\n        let shift = 1;\n\n        do {\n          nextTab = list[(index + shift) % list.length];\n          shift++;\n        } while (nextTab.classList.contains('disabled'));\n\n        nextTab.focus();\n        return;\n      }\n\n      if (event.keyCode === 37 || event.key === 'LeftArrow') {\n        let previousTab;\n        let shift = 1;\n        let i = index;\n\n        do {\n          if (i - shift < 0) {\n            i = list.length - 1;\n            previousTab = list[i];\n            shift = 0;\n          } else {\n            previousTab = list[i - shift];\n          }\n\n          shift++;\n        } while (previousTab.classList.contains('disabled'));\n\n        previousTab.focus();\n        return;\n      }\n\n      if (event.keyCode === 36 || event.key === 'Home') {\n        event.preventDefault();\n        let firstTab;\n        let shift = 0;\n\n        do {\n          firstTab = list[shift % list.length];\n          shift++;\n        } while (firstTab.classList.contains('disabled'));\n\n        firstTab.focus();\n        return;\n      }\n\n      if (event.keyCode === 35 || event.key === 'End') {\n        event.preventDefault();\n        let lastTab;\n        let shift = 1;\n        let i = index;\n\n        do {\n          if (i - shift < 0) {\n            i = list.length - 1;\n            lastTab = list[i];\n            shift = 0;\n          } else {\n            lastTab = list[i - shift];\n          }\n\n          shift++;\n        } while (lastTab.classList.contains('disabled'));\n\n        lastTab.focus();\n        return;\n      }\n\n      if (event.keyCode === 46 || event.key === 'Delete') {\n        if (this.tabs[index].removable) {\n          this.removeTab(this.tabs[index]);\n\n          if (list[index + 1]) {\n            list[(index + 1) % list.length].focus();\n            return;\n          }\n\n          if (list[list.length - 1]) {\n            list[0].focus();\n          }\n        }\n      }\n    }\n\n    getClosestTabIndex(index) {\n      const tabsLength = this.tabs.length;\n\n      if (!tabsLength) {\n        return -1;\n      }\n\n      for (let step = 1; step <= tabsLength; step += 1) {\n        const prevIndex = index - step;\n        const nextIndex = index + step;\n\n        if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n          return prevIndex;\n        }\n\n        if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n          return nextIndex;\n        }\n      }\n\n      return -1;\n    }\n\n    hasAvailableTabs(index) {\n      const tabsLength = this.tabs.length;\n\n      if (!tabsLength) {\n        return false;\n      }\n\n      for (let i = 0; i < tabsLength; i += 1) {\n        if (!this.tabs[i].disabled && i !== index) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    setClassMap() {\n      this.classMap = {\n        'nav-stacked': this.vertical,\n        'flex-column': this.vertical,\n        'nav-justified': this.justified,\n        [`nav-${this.type}`]: true\n      };\n    }\n\n  }\n\n  TabsetComponent.ɵfac = function TabsetComponent_Factory(t) {\n    return new (t || TabsetComponent)(i0.ɵɵdirectiveInject(TabsetConfig), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  TabsetComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TabsetComponent,\n    selectors: [[\"tabset\"]],\n    hostVars: 2,\n    hostBindings: function TabsetComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"tab-container\", ctx.clazz);\n      }\n    },\n    inputs: {\n      vertical: \"vertical\",\n      justified: \"justified\",\n      type: \"type\"\n    },\n    ngContentSelectors: _c1,\n    decls: 4,\n    vars: 3,\n    consts: [[\"role\", \"tablist\", 1, \"nav\", 3, \"ngClass\", \"click\"], [3, \"ngClass\", \"active\", \"disabled\", \"keydown\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [3, \"ngClass\", \"keydown\"], [\"href\", \"javascript:void(0);\", \"role\", \"tab\", 1, \"nav-link\", 3, \"click\"], [3, \"ngTransclude\"], [\"class\", \"bs-remove-tab\", 3, \"click\", 4, \"ngIf\"], [1, \"bs-remove-tab\", 3, \"click\"]],\n    template: function TabsetComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"ul\", 0);\n        i0.ɵɵlistener(\"click\", function TabsetComponent_Template_ul_click_0_listener($event) {\n          return $event.preventDefault();\n        });\n        i0.ɵɵtemplate(1, TabsetComponent_li_1_Template, 5, 17, \"li\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵprojection(3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.classMap);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, NgTranscludeDirective],\n    styles: [\"[_nghost-%COMP%]   .nav-tabs[_ngcontent-%COMP%]   .nav-item.disabled[_ngcontent-%COMP%]   a.disabled[_ngcontent-%COMP%]{cursor:default}\"]\n  });\n  return TabsetComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TabDirective = /*#__PURE__*/(() => {\n  class TabDirective {\n    constructor(tabset, elementRef, renderer) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      /** if true tab can not be activated */\n\n      this.disabled = false;\n      /** if true tab can be removable, additional button will appear */\n\n      this.removable = false;\n      /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n\n      this.selectTab = new EventEmitter();\n      /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n\n      this.deselect = new EventEmitter();\n      /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n\n      this.removed = new EventEmitter();\n      this.addClass = true;\n      this.role = 'tabpanel';\n      this._active = false;\n      this._customClass = '';\n      this.tabset = tabset;\n      this.tabset.addTab(this);\n    }\n    /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n\n\n    get customClass() {\n      return this._customClass;\n    }\n\n    set customClass(customClass) {\n      if (this.customClass) {\n        this.customClass.split(' ').forEach(cssClass => {\n          this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n        });\n      }\n\n      this._customClass = customClass ? customClass.trim() : '';\n\n      if (this.customClass) {\n        this.customClass.split(' ').forEach(cssClass => {\n          this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n        });\n      }\n    }\n    /** tab active state toggle */\n\n\n    get active() {\n      return this._active;\n    }\n\n    set active(active) {\n      if (this._active === active) {\n        return;\n      }\n\n      if (this.disabled && active || !active) {\n        if (this._active && !active) {\n          this.deselect.emit(this);\n          this._active = active;\n        }\n\n        return;\n      }\n\n      this._active = active;\n      this.selectTab.emit(this);\n      this.tabset.tabs.forEach(tab => {\n        if (tab !== this) {\n          tab.active = false;\n        }\n      });\n    }\n\n    get ariaLabelledby() {\n      return this.id ? `${this.id}-link` : '';\n    }\n\n    ngOnInit() {\n      this.removable = !!this.removable;\n    }\n\n    ngOnDestroy() {\n      this.tabset.removeTab(this, {\n        reselect: false,\n        emit: false\n      });\n    }\n\n  }\n\n  TabDirective.ɵfac = function TabDirective_Factory(t) {\n    return new (t || TabDirective)(i0.ɵɵdirectiveInject(TabsetComponent), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  TabDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TabDirective,\n    selectors: [[\"tab\"], [\"\", \"tab\", \"\"]],\n    hostVars: 7,\n    hostBindings: function TabDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id)(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabelledby);\n        i0.ɵɵclassProp(\"active\", ctx.active)(\"tab-pane\", ctx.addClass);\n      }\n    },\n    inputs: {\n      heading: \"heading\",\n      id: \"id\",\n      disabled: \"disabled\",\n      removable: \"removable\",\n      customClass: \"customClass\",\n      active: \"active\"\n    },\n    outputs: {\n      selectTab: \"selectTab\",\n      deselect: \"deselect\",\n      removed: \"removed\"\n    },\n    exportAs: [\"tab\"]\n  });\n  return TabDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Should be used to mark <ng-template> element as a template for tab heading */\n\n\nlet TabHeadingDirective = /*#__PURE__*/(() => {\n  class TabHeadingDirective {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(templateRef, tab) {\n      tab.headingRef = templateRef;\n    }\n\n  }\n\n  TabHeadingDirective.ɵfac = function TabHeadingDirective_Factory(t) {\n    return new (t || TabHeadingDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(TabDirective));\n  };\n\n  TabHeadingDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TabHeadingDirective,\n    selectors: [[\"\", \"tabHeading\", \"\"]]\n  });\n  return TabHeadingDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TabsModule = /*#__PURE__*/(() => {\n  class TabsModule {\n    static forRoot() {\n      return {\n        ngModule: TabsModule,\n        providers: []\n      };\n    }\n\n  }\n\n  TabsModule.ɵfac = function TabsModule_Factory(t) {\n    return new (t || TabsModule)();\n  };\n\n  TabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TabsModule\n  });\n  TabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return TabsModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { NgTranscludeDirective, TabDirective, TabHeadingDirective, TabsModule, TabsetComponent, TabsetConfig };","map":{"version":3,"names":["i0","Directive","Input","Injectable","Component","HostBinding","EventEmitter","Output","NgModule","i2","CommonModule","NgTranscludeDirective","constructor","viewRef","ngTransclude","templateRef","_ngTransclude","createEmbeddedView","ɵfac","ViewContainerRef","ɵdir","TabsetConfig","type","isKeysAllowed","ariaLabel","ɵprov","TabsetComponent","config","renderer","elementRef","clazz","tabs","classMap","isDestroyed","_vertical","_justified","_type","_isKeysAllowed","Object","assign","vertical","value","setClassMap","justified","ngOnDestroy","addTab","tab","push","active","length","removeTab","options","reselect","emit","index","indexOf","hasAvailableTabs","newActiveIndex","getClosestTabIndex","removed","splice","nativeElement","parentNode","removeChild","keyNavActions","event","list","Array","from","querySelectorAll","keyCode","key","preventDefault","currentTab","click","nextTab","shift","classList","contains","focus","previousTab","i","firstTab","lastTab","removable","tabsLength","step","prevIndex","nextIndex","disabled","Renderer2","ElementRef","ɵcmp","NgClass","NgForOf","NgIf","TabDirective","tabset","selectTab","deselect","addClass","role","_active","_customClass","customClass","split","forEach","cssClass","removeClass","trim","ariaLabelledby","id","ngOnInit","TabHeadingDirective","headingRef","TemplateRef","TabsModule","forRoot","ngModule","providers","ɵmod","ɵinj"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/ngx-bootstrap/tabs/fesm2015/ngx-bootstrap-tabs.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, Input, Injectable, Component, HostBinding, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass NgTranscludeDirective {\n    constructor(viewRef) {\n        this.viewRef = viewRef;\n    }\n    set ngTransclude(templateRef) {\n        this._ngTransclude = templateRef;\n        if (templateRef) {\n            this.viewRef.createEmbeddedView(templateRef);\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get ngTransclude() {\n        return this._ngTransclude;\n    }\n}\nNgTranscludeDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: NgTranscludeDirective, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgTranscludeDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: NgTranscludeDirective, selector: \"[ngTransclude]\", inputs: { ngTransclude: \"ngTransclude\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: NgTranscludeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngTransclude]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }]; }, propDecorators: { ngTransclude: [{\n                type: Input\n            }] } });\n\nclass TabsetConfig {\n    constructor() {\n        /** provides default navigation context class: 'tabs' or 'pills' */\n        this.type = 'tabs';\n        /** provides possibility to set keyNavigations enable or disable, by default is enable */\n        this.isKeysAllowed = true;\n        /** aria label for tab list */\n        this.ariaLabel = 'Tabs';\n    }\n}\nTabsetConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsetConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTabsetConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsetConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsetConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\n// todo: add active event to tab\n// todo: fix? mixing static and dynamic tabs position tabs in order of creation\nclass TabsetComponent {\n    constructor(config, renderer, elementRef) {\n        this.renderer = renderer;\n        this.elementRef = elementRef;\n        this.clazz = true;\n        this.tabs = [];\n        this.classMap = {};\n        /** aria label for tab list */\n        this.ariaLabel = 'Tabs';\n        this.isDestroyed = false;\n        this._vertical = false;\n        this._justified = false;\n        this._type = 'tabs';\n        this._isKeysAllowed = true;\n        Object.assign(this, config);\n    }\n    /** if true tabs will be placed vertically */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = value;\n        this.setClassMap();\n    }\n    /** if true tabs fill the container and have a consistent width */\n    get justified() {\n        return this._justified;\n    }\n    set justified(value) {\n        this._justified = value;\n        this.setClassMap();\n    }\n    /** navigation context class: 'tabs' or 'pills' */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value;\n        this.setClassMap();\n    }\n    get isKeysAllowed() {\n        return this._isKeysAllowed;\n    }\n    set isKeysAllowed(value) {\n        this._isKeysAllowed = value;\n    }\n    ngOnDestroy() {\n        this.isDestroyed = true;\n    }\n    addTab(tab) {\n        this.tabs.push(tab);\n        tab.active = this.tabs.length === 1 && !tab.active;\n    }\n    removeTab(tab, options = { reselect: true, emit: true }) {\n        const index = this.tabs.indexOf(tab);\n        if (index === -1 || this.isDestroyed) {\n            return;\n        }\n        // Select a new tab if the tab to be removed is selected and not destroyed\n        if (options.reselect && tab.active && this.hasAvailableTabs(index)) {\n            const newActiveIndex = this.getClosestTabIndex(index);\n            this.tabs[newActiveIndex].active = true;\n        }\n        if (options.emit) {\n            tab.removed.emit(tab);\n        }\n        this.tabs.splice(index, 1);\n        if (tab.elementRef.nativeElement.parentNode) {\n            this.renderer.removeChild(tab.elementRef.nativeElement.parentNode, tab.elementRef.nativeElement);\n        }\n    }\n    keyNavActions(event, index) {\n        if (!this.isKeysAllowed) {\n            return;\n        }\n        const list = Array.from(this.elementRef.nativeElement.querySelectorAll('.nav-link'));\n        // const activeElList = list.filter((el: HTMLElement) => !el.classList.contains('disabled'));\n        if (event.keyCode === 13 || event.key === 'Enter' || event.keyCode === 32 || event.key === 'Space') {\n            event.preventDefault();\n            const currentTab = list[(index) % list.length];\n            currentTab.click();\n            return;\n        }\n        if (event.keyCode === 39 || event.key === 'RightArrow') {\n            let nextTab;\n            let shift = 1;\n            do {\n                nextTab = list[(index + shift) % list.length];\n                shift++;\n            } while (nextTab.classList.contains('disabled'));\n            nextTab.focus();\n            return;\n        }\n        if (event.keyCode === 37 || event.key === 'LeftArrow') {\n            let previousTab;\n            let shift = 1;\n            let i = index;\n            do {\n                if ((i - shift) < 0) {\n                    i = list.length - 1;\n                    previousTab = list[i];\n                    shift = 0;\n                }\n                else {\n                    previousTab = list[i - shift];\n                }\n                shift++;\n            } while (previousTab.classList.contains('disabled'));\n            previousTab.focus();\n            return;\n        }\n        if (event.keyCode === 36 || event.key === 'Home') {\n            event.preventDefault();\n            let firstTab;\n            let shift = 0;\n            do {\n                firstTab = list[shift % list.length];\n                shift++;\n            } while (firstTab.classList.contains('disabled'));\n            firstTab.focus();\n            return;\n        }\n        if (event.keyCode === 35 || event.key === 'End') {\n            event.preventDefault();\n            let lastTab;\n            let shift = 1;\n            let i = index;\n            do {\n                if ((i - shift) < 0) {\n                    i = list.length - 1;\n                    lastTab = list[i];\n                    shift = 0;\n                }\n                else {\n                    lastTab = list[i - shift];\n                }\n                shift++;\n            } while (lastTab.classList.contains('disabled'));\n            lastTab.focus();\n            return;\n        }\n        if (event.keyCode === 46 || event.key === 'Delete') {\n            if (this.tabs[index].removable) {\n                this.removeTab(this.tabs[index]);\n                if (list[index + 1]) {\n                    list[(index + 1) % list.length].focus();\n                    return;\n                }\n                if (list[list.length - 1]) {\n                    list[0].focus();\n                }\n            }\n        }\n    }\n    getClosestTabIndex(index) {\n        const tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return -1;\n        }\n        for (let step = 1; step <= tabsLength; step += 1) {\n            const prevIndex = index - step;\n            const nextIndex = index + step;\n            if (this.tabs[prevIndex] && !this.tabs[prevIndex].disabled) {\n                return prevIndex;\n            }\n            if (this.tabs[nextIndex] && !this.tabs[nextIndex].disabled) {\n                return nextIndex;\n            }\n        }\n        return -1;\n    }\n    hasAvailableTabs(index) {\n        const tabsLength = this.tabs.length;\n        if (!tabsLength) {\n            return false;\n        }\n        for (let i = 0; i < tabsLength; i += 1) {\n            if (!this.tabs[i].disabled && i !== index) {\n                return true;\n            }\n        }\n        return false;\n    }\n    setClassMap() {\n        this.classMap = {\n            'nav-stacked': this.vertical,\n            'flex-column': this.vertical,\n            'nav-justified': this.justified,\n            [`nav-${this.type}`]: true\n        };\n    }\n}\nTabsetComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsetComponent, deps: [{ token: TabsetConfig }, { token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nTabsetComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: TabsetComponent, selector: \"tabset\", inputs: { vertical: \"vertical\", justified: \"justified\", type: \"type\" }, host: { properties: { \"class.tab-container\": \"this.clazz\" } }, ngImport: i0, template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\\n\"], dependencies: [{ kind: \"directive\", type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: NgTranscludeDirective, selector: \"[ngTransclude]\", inputs: [\"ngTransclude\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsetComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'tabset', template: \"<ul class=\\\"nav\\\" [ngClass]=\\\"classMap\\\"\\n    (click)=\\\"$event.preventDefault()\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    role=\\\"tablist\\\">\\n  <li *ngFor=\\\"let tabz of tabs; let i = index\\\" [ngClass]=\\\"['nav-item', tabz.customClass || '']\\\"\\n      [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\" (keydown)=\\\"keyNavActions($event, i)\\\">\\n    <a href=\\\"javascript:void(0);\\\" class=\\\"nav-link\\\" role=\\\"tab\\\"\\n       [attr.aria-controls]=\\\"tabz.id ? tabz.id : ''\\\"\\n       [attr.aria-selected]=\\\"!!tabz.active\\\"\\n       [attr.id]=\\\"tabz.id ? tabz.id + '-link' : ''\\\"\\n       [class.active]=\\\"tabz.active\\\" [class.disabled]=\\\"tabz.disabled\\\"\\n       (click)=\\\"tabz.active = true\\\">\\n      <span [ngTransclude]=\\\"tabz.headingRef\\\">{{ tabz.heading }}</span>\\n      <span *ngIf=\\\"tabz.removable\\\" (click)=\\\"$event.preventDefault(); removeTab(tabz);\\\" class=\\\"bs-remove-tab\\\"> &#10060;</span>\\n    </a>\\n  </li>\\n</ul>\\n<div class=\\\"tab-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\":host .nav-tabs .nav-item.disabled a.disabled{cursor:default}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TabsetConfig }, { type: i0.Renderer2 }, { type: i0.ElementRef }]; }, propDecorators: { vertical: [{\n                type: Input\n            }], justified: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], clazz: [{\n                type: HostBinding,\n                args: ['class.tab-container']\n            }] } });\n\nclass TabDirective {\n    constructor(tabset, elementRef, renderer) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        /** if true tab can not be activated */\n        this.disabled = false;\n        /** if true tab can be removable, additional button will appear */\n        this.removable = false;\n        /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n        this.selectTab = new EventEmitter();\n        /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n        this.deselect = new EventEmitter();\n        /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n        this.removed = new EventEmitter();\n        this.addClass = true;\n        this.role = 'tabpanel';\n        this._active = false;\n        this._customClass = '';\n        this.tabset = tabset;\n        this.tabset.addTab(this);\n    }\n    /** if set, will be added to the tab's class attribute. Multiple classes are supported. */\n    get customClass() {\n        return this._customClass;\n    }\n    set customClass(customClass) {\n        if (this.customClass) {\n            this.customClass.split(' ').forEach((cssClass) => {\n                this.renderer.removeClass(this.elementRef.nativeElement, cssClass);\n            });\n        }\n        this._customClass = customClass ? customClass.trim() : '';\n        if (this.customClass) {\n            this.customClass.split(' ').forEach((cssClass) => {\n                this.renderer.addClass(this.elementRef.nativeElement, cssClass);\n            });\n        }\n    }\n    /** tab active state toggle */\n    get active() {\n        return this._active;\n    }\n    set active(active) {\n        if (this._active === active) {\n            return;\n        }\n        if ((this.disabled && active) || !active) {\n            if (this._active && !active) {\n                this.deselect.emit(this);\n                this._active = active;\n            }\n            return;\n        }\n        this._active = active;\n        this.selectTab.emit(this);\n        this.tabset.tabs.forEach((tab) => {\n            if (tab !== this) {\n                tab.active = false;\n            }\n        });\n    }\n    get ariaLabelledby() {\n        return this.id ? `${this.id}-link` : '';\n    }\n    ngOnInit() {\n        this.removable = !!this.removable;\n    }\n    ngOnDestroy() {\n        this.tabset.removeTab(this, { reselect: false, emit: false });\n    }\n}\nTabDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabDirective, deps: [{ token: TabsetComponent }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\nTabDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: TabDirective, selector: \"tab, [tab]\", inputs: { heading: \"heading\", id: \"id\", disabled: \"disabled\", removable: \"removable\", customClass: \"customClass\", active: \"active\" }, outputs: { selectTab: \"selectTab\", deselect: \"deselect\", removed: \"removed\" }, host: { properties: { \"attr.id\": \"this.id\", \"class.active\": \"this.active\", \"class.tab-pane\": \"this.addClass\", \"attr.role\": \"this.role\", \"attr.aria-labelledby\": \"this.ariaLabelledby\" } }, exportAs: [\"tab\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'tab, [tab]', exportAs: 'tab' }]\n        }], ctorParameters: function () { return [{ type: TabsetComponent }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { heading: [{\n                type: Input\n            }], id: [{\n                type: HostBinding,\n                args: ['attr.id']\n            }, {\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], customClass: [{\n                type: Input\n            }], active: [{\n                type: HostBinding,\n                args: ['class.active']\n            }, {\n                type: Input\n            }], selectTab: [{\n                type: Output\n            }], deselect: [{\n                type: Output\n            }], removed: [{\n                type: Output\n            }], addClass: [{\n                type: HostBinding,\n                args: ['class.tab-pane']\n            }], role: [{\n                type: HostBinding,\n                args: ['attr.role']\n            }], ariaLabelledby: [{\n                type: HostBinding,\n                args: ['attr.aria-labelledby']\n            }] } });\n\n/** Should be used to mark <ng-template> element as a template for tab heading */\nclass TabHeadingDirective {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(templateRef, tab) {\n        tab.headingRef = templateRef;\n    }\n}\nTabHeadingDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabHeadingDirective, deps: [{ token: i0.TemplateRef }, { token: TabDirective }], target: i0.ɵɵFactoryTarget.Directive });\nTabHeadingDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: TabHeadingDirective, selector: \"[tabHeading]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabHeadingDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: '[tabHeading]' }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: TabDirective }]; } });\n\nclass TabsModule {\n    static forRoot() {\n        return {\n            ngModule: TabsModule,\n            providers: []\n        };\n    }\n}\nTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsModule, declarations: [NgTranscludeDirective,\n        TabDirective,\n        TabsetComponent,\n        TabHeadingDirective], imports: [CommonModule], exports: [TabDirective,\n        TabsetComponent,\n        TabHeadingDirective,\n        NgTranscludeDirective] });\nTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        NgTranscludeDirective,\n                        TabDirective,\n                        TabsetComponent,\n                        TabHeadingDirective\n                    ],\n                    exports: [\n                        TabDirective,\n                        TabsetComponent,\n                        TabHeadingDirective,\n                        NgTranscludeDirective\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgTranscludeDirective, TabDirective, TabHeadingDirective, TabsModule, TabsetComponent, TabsetConfig };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}