{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\nconst _c0 = function (a0) {\n  return {\n    dropdown: a0\n  };\n};\n\nconst _c1 = [\"*\"];\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [style({\n  height: 0,\n  overflow: 'hidden'\n}), animate(DROPDOWN_ANIMATION_TIMING, style({\n  height: '*',\n  overflow: 'hidden'\n}))];\nlet BsDropdownState = /*#__PURE__*/(() => {\n  class BsDropdownState {\n    constructor() {\n      this.direction = 'down';\n      this.autoClose = true;\n      this.insideClick = false;\n      this.isAnimated = false;\n      this.stopOnClickPropagation = false;\n      this.isOpenChange = new EventEmitter();\n      this.isDisabledChange = new EventEmitter();\n      this.toggleClick = new EventEmitter();\n      this.counts = 0;\n      this.dropdownMenu = new Promise(resolve => {\n        this.resolveDropdownMenu = resolve;\n      });\n    }\n\n  }\n\n  BsDropdownState.ɵfac = function BsDropdownState_Factory(t) {\n    return new (t || BsDropdownState)();\n  };\n\n  BsDropdownState.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BsDropdownState,\n    factory: BsDropdownState.ɵfac,\n    providedIn: 'platform'\n  });\n  return BsDropdownState;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})(); // todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\n\n\nlet BsDropdownContainerComponent = /*#__PURE__*/(() => {\n  class BsDropdownContainerComponent {\n    constructor(_state, cd, _renderer, _element, _builder) {\n      this._state = _state;\n      this.cd = cd;\n      this._renderer = _renderer;\n      this._element = _element;\n      this.isOpen = false;\n      this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n      this._subscription = _state.isOpenChange.subscribe(value => {\n        this.isOpen = value;\n\n        const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n\n        this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n\n        if (dropdown && !isBs3()) {\n          this._renderer.addClass(dropdown, 'show');\n\n          if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n            this._renderer.setStyle(dropdown, 'left', 'auto');\n\n            this._renderer.setStyle(dropdown, 'right', '0');\n          }\n\n          if (this.direction === 'up') {\n            this._renderer.setStyle(dropdown, 'top', 'auto');\n\n            this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n          }\n        }\n\n        if (dropdown && this._state.isAnimated) {\n          this._factoryDropDownAnimation.create(dropdown).play();\n        }\n\n        this.cd.markForCheck();\n        this.cd.detectChanges();\n      });\n    }\n\n    get direction() {\n      return this._state.direction;\n    }\n    /** @internal */\n\n\n    _contains(el) {\n      return this._element.nativeElement.contains(el);\n    }\n\n    ngOnDestroy() {\n      this._subscription.unsubscribe();\n    }\n\n  }\n\n  BsDropdownContainerComponent.ɵfac = function BsDropdownContainerComponent_Factory(t) {\n    return new (t || BsDropdownContainerComponent)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n  };\n\n  BsDropdownContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BsDropdownContainerComponent,\n    selectors: [[\"bs-dropdown-container\"]],\n    hostAttrs: [2, \"display\", \"block\", \"position\", \"absolute\", \"z-index\", \"1040\"],\n    ngContentSelectors: _c1,\n    decls: 2,\n    vars: 9,\n    consts: [[3, \"ngClass\"]],\n    template: function BsDropdownContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"dropup\", ctx.direction === \"up\")(\"show\", ctx.isOpen)(\"open\", ctx.isOpen);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.direction === \"down\"));\n      }\n    },\n    dependencies: [i3.NgClass],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return BsDropdownContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Default dropdown configuration */\n\n\nlet BsDropdownConfig = /*#__PURE__*/(() => {\n  class BsDropdownConfig {\n    constructor() {\n      /** default dropdown auto closing behavior */\n      this.autoClose = true;\n      /** default dropdown auto closing behavior */\n\n      this.insideClick = false;\n      /** turn on/off animation */\n\n      this.isAnimated = false;\n      /** value true of stopOnClickPropagation allows event stopPropagation*/\n\n      this.stopOnClickPropagation = false;\n    }\n\n  }\n\n  BsDropdownConfig.ɵfac = function BsDropdownConfig_Factory(t) {\n    return new (t || BsDropdownConfig)();\n  };\n\n  BsDropdownConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BsDropdownConfig,\n    factory: BsDropdownConfig.ɵfac,\n    providedIn: 'root'\n  });\n  return BsDropdownConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BsDropdownDirective = /*#__PURE__*/(() => {\n  class BsDropdownDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n      this._elementRef = _elementRef;\n      this._renderer = _renderer;\n      this._viewContainerRef = _viewContainerRef;\n      this._cis = _cis;\n      this._state = _state;\n      this._config = _config;\n      /**\n       * This attribute indicates that the dropdown should be opened upwards\n       */\n\n      this.dropup = false; // todo: move to component loader\n\n      this._isInlineOpen = false;\n      this._isDisabled = false;\n      this._subscriptions = [];\n      this._isInited = false; // set initial dropdown state from config\n\n      this._state.autoClose = this._config.autoClose;\n      this._state.insideClick = this._config.insideClick;\n      this._state.isAnimated = this._config.isAnimated;\n      this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n      this._factoryDropDownAnimation = _builder.build(dropdownAnimation); // create dropdown component loader\n\n      this._dropdown = this._cis.createLoader(this._elementRef, this._viewContainerRef, this._renderer).provide({\n        provide: BsDropdownState,\n        useValue: this._state\n      });\n      this.onShown = this._dropdown.onShown;\n      this.onHidden = this._dropdown.onHidden;\n      this.isOpenChange = this._state.isOpenChange;\n    }\n    /**\n     * Indicates that dropdown will be closed on item or document click,\n     * and after pressing ESC\n     */\n\n\n    set autoClose(value) {\n      this._state.autoClose = value;\n    }\n\n    get autoClose() {\n      return this._state.autoClose;\n    }\n    /**\n     * Indicates that dropdown will be animated\n     */\n\n\n    set isAnimated(value) {\n      this._state.isAnimated = value;\n    }\n\n    get isAnimated() {\n      return this._state.isAnimated;\n    }\n    /**\n     * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n     */\n\n\n    set insideClick(value) {\n      this._state.insideClick = value;\n    }\n\n    get insideClick() {\n      return this._state.insideClick;\n    }\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     */\n\n\n    set isDisabled(value) {\n      this._isDisabled = value;\n\n      this._state.isDisabledChange.emit(value);\n\n      if (value) {\n        this.hide();\n      }\n    }\n\n    get isDisabled() {\n      return this._isDisabled;\n    }\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n\n\n    get isOpen() {\n      if (this._showInline) {\n        return this._isInlineOpen;\n      }\n\n      return this._dropdown.isShown;\n    }\n\n    set isOpen(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    get isBs4() {\n      return !isBs3();\n    }\n\n    get _showInline() {\n      return !this.container;\n    }\n\n    ngOnInit() {\n      // fix: seems there are an issue with `routerLinkActive`\n      // which result in duplicated call ngOnInit without call to ngOnDestroy\n      // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n      if (this._isInited) {\n        return;\n      }\n\n      this._isInited = true; // attach DOM listeners\n\n      this._dropdown.listen({\n        // because of dropdown inline mode\n        outsideClick: false,\n        triggers: this.triggers,\n        show: () => this.show()\n      }); // toggle visibility on toggle element click\n\n\n      this._subscriptions.push(this._state.toggleClick.subscribe(value => this.toggle(value))); // hide dropdown if set disabled while opened\n\n\n      this._subscriptions.push(this._state.isDisabledChange.pipe(filter(value => value)).subscribe(() => this.hide()));\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n\n\n    show() {\n      if (this.isOpen || this.isDisabled) {\n        return;\n      }\n\n      if (this._showInline) {\n        if (!this._inlinedMenu) {\n          this._state.dropdownMenu.then(dropdownMenu => {\n            this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n\n            this._inlinedMenu = this._dropdown._inlineViewRef;\n            this.addBs4Polyfills();\n\n            if (this._inlinedMenu) {\n              this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n            }\n\n            this.playAnimation();\n          }) // swallow errors\n          .catch();\n        }\n\n        this.addBs4Polyfills();\n        this._isInlineOpen = true;\n        this.onShown.emit(true);\n\n        this._state.isOpenChange.emit(true);\n\n        this.playAnimation();\n        return;\n      }\n\n      this._state.dropdownMenu.then(dropdownMenu => {\n        // check direction in which dropdown should be opened\n        const _dropup = this.dropup || typeof this.dropup !== 'undefined' && this.dropup;\n\n        this._state.direction = _dropup ? 'up' : 'down';\n\n        const _placement = this.placement || (_dropup ? 'top start' : 'bottom start'); // show dropdown\n\n\n        this._dropdown.attach(BsDropdownContainerComponent).to(this.container).position({\n          attachment: _placement\n        }).show({\n          content: dropdownMenu.templateRef,\n          placement: _placement\n        });\n\n        this._state.isOpenChange.emit(true);\n      }) // swallow error\n      .catch();\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n\n\n    hide() {\n      if (!this.isOpen) {\n        return;\n      }\n\n      if (this._showInline) {\n        this.removeShowClass();\n        this.removeDropupStyles();\n        this._isInlineOpen = false;\n        this.onHidden.emit(true);\n      } else {\n        this._dropdown.hide();\n      }\n\n      this._state.isOpenChange.emit(false);\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n     * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n     */\n\n\n    toggle(value) {\n      if (this.isOpen || !value) {\n        return this.hide();\n      }\n\n      return this.show();\n    }\n    /** @internal */\n\n\n    _contains(event) {\n      // todo: valorkin fix typings\n      return this._elementRef.nativeElement.contains(event.target) || this._dropdown.instance && this._dropdown.instance._contains(event.target);\n    }\n\n    navigationClick(event) {\n      const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n\n      if (!ref) {\n        return;\n      }\n\n      const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n      const allRef = ref.querySelectorAll('.dropdown-item');\n\n      switch (event.keyCode) {\n        case 38:\n          if (this._state.counts > 0) {\n            allRef[--this._state.counts].focus();\n          }\n\n          break;\n\n        case 40:\n          if (this._state.counts + 1 < allRef.length) {\n            if (firstActive.classList !== allRef[this._state.counts].classList) {\n              allRef[this._state.counts].focus();\n            } else {\n              allRef[++this._state.counts].focus();\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      event.preventDefault();\n    }\n\n    ngOnDestroy() {\n      // clean up subscriptions and destroy dropdown\n      for (const sub of this._subscriptions) {\n        sub.unsubscribe();\n      }\n\n      this._dropdown.dispose();\n    }\n\n    addBs4Polyfills() {\n      if (!isBs3()) {\n        this.addShowClass();\n        this.checkRightAlignment();\n        this.addDropupStyles();\n      }\n    }\n\n    playAnimation() {\n      if (this._state.isAnimated && this._inlinedMenu) {\n        setTimeout(() => {\n          if (this._inlinedMenu) {\n            this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n          }\n        });\n      }\n    }\n\n    addShowClass() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n      }\n    }\n\n    removeShowClass() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n      }\n    }\n\n    checkRightAlignment() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n      }\n    }\n\n    addDropupStyles() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        // a little hack to not break support of bootstrap 4 beta\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n\n        this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n      }\n    }\n\n    removeDropupStyles() {\n      if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n        this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n\n        this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n\n        this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n      }\n    }\n\n  }\n\n  BsDropdownDirective.ɵfac = function BsDropdownDirective_Factory(t) {\n    return new (t || BsDropdownDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.ComponentLoaderFactory), i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(BsDropdownConfig), i0.ɵɵdirectiveInject(i2.AnimationBuilder));\n  };\n\n  BsDropdownDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BsDropdownDirective,\n    selectors: [[\"\", \"bsDropdown\", \"\"], [\"\", \"dropdown\", \"\"]],\n    hostVars: 6,\n    hostBindings: function BsDropdownDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.arrowDown\", function BsDropdownDirective_keydown_arrowDown_HostBindingHandler($event) {\n          return ctx.navigationClick($event);\n        })(\"keydown.arrowUp\", function BsDropdownDirective_keydown_arrowUp_HostBindingHandler($event) {\n          return ctx.navigationClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"dropup\", ctx.dropup)(\"open\", ctx.isOpen)(\"show\", ctx.isOpen && ctx.isBs4);\n      }\n    },\n    inputs: {\n      placement: \"placement\",\n      triggers: \"triggers\",\n      container: \"container\",\n      dropup: \"dropup\",\n      autoClose: \"autoClose\",\n      isAnimated: \"isAnimated\",\n      insideClick: \"insideClick\",\n      isDisabled: \"isDisabled\",\n      isOpen: \"isOpen\"\n    },\n    outputs: {\n      isOpenChange: \"isOpenChange\",\n      onShown: \"onShown\",\n      onHidden: \"onHidden\"\n    },\n    exportAs: [\"bs-dropdown\"],\n    features: [i0.ɵɵProvidersFeature([BsDropdownState])]\n  });\n  return BsDropdownDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BsDropdownMenuDirective = /*#__PURE__*/(() => {\n  class BsDropdownMenuDirective {\n    constructor(_state, _viewContainer, _templateRef) {\n      _state.resolveDropdownMenu({\n        templateRef: _templateRef,\n        viewContainer: _viewContainer\n      });\n    }\n\n  }\n\n  BsDropdownMenuDirective.ɵfac = function BsDropdownMenuDirective_Factory(t) {\n    return new (t || BsDropdownMenuDirective)(i0.ɵɵdirectiveInject(BsDropdownState), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.TemplateRef));\n  };\n\n  BsDropdownMenuDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BsDropdownMenuDirective,\n    selectors: [[\"\", \"bsDropdownMenu\", \"\"], [\"\", \"dropdownMenu\", \"\"]],\n    exportAs: [\"bs-dropdown-menu\"]\n  });\n  return BsDropdownMenuDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BsDropdownToggleDirective = /*#__PURE__*/(() => {\n  class BsDropdownToggleDirective {\n    constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dropdown = _dropdown;\n      this._element = _element;\n      this._renderer = _renderer;\n      this._state = _state;\n      this.isOpen = false;\n      this._subscriptions = []; // sync is open value with state\n\n      this._subscriptions.push(this._state.isOpenChange.subscribe(value => {\n        this.isOpen = value;\n\n        if (value) {\n          this._documentClickListener = this._renderer.listen('document', 'click', event => {\n            if (this._state.autoClose && event.button !== 2 && !this._element.nativeElement.contains(event.target) && !(this._state.insideClick && this._dropdown._contains(event))) {\n              this._state.toggleClick.emit(false);\n\n              this._changeDetectorRef.detectChanges();\n            }\n          });\n          this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n            if (this._state.autoClose) {\n              this._state.toggleClick.emit(false);\n\n              this._changeDetectorRef.detectChanges();\n            }\n          });\n        } else {\n          this._documentClickListener && this._documentClickListener();\n          this._escKeyUpListener && this._escKeyUpListener();\n        }\n      })); // populate disabled state\n\n\n      this._subscriptions.push(this._state.isDisabledChange.subscribe(value => this.isDisabled = value || void 0));\n    }\n\n    onClick(event) {\n      if (this._state.stopOnClickPropagation) {\n        event.stopPropagation();\n      }\n\n      if (this.isDisabled) {\n        return;\n      }\n\n      this._state.toggleClick.emit(true);\n    }\n\n    ngOnDestroy() {\n      if (this._documentClickListener) {\n        this._documentClickListener();\n      }\n\n      if (this._escKeyUpListener) {\n        this._escKeyUpListener();\n      }\n\n      for (const sub of this._subscriptions) {\n        sub.unsubscribe();\n      }\n    }\n\n  }\n\n  BsDropdownToggleDirective.ɵfac = function BsDropdownToggleDirective_Factory(t) {\n    return new (t || BsDropdownToggleDirective)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(BsDropdownDirective), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(BsDropdownState));\n  };\n\n  BsDropdownToggleDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BsDropdownToggleDirective,\n    selectors: [[\"\", \"bsDropdownToggle\", \"\"], [\"\", \"dropdownToggle\", \"\"]],\n    hostVars: 3,\n    hostBindings: function BsDropdownToggleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function BsDropdownToggleDirective_click_HostBindingHandler($event) {\n          return ctx.onClick($event);\n        });\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-haspopup\", true)(\"disabled\", ctx.isDisabled)(\"aria-expanded\", ctx.isOpen);\n      }\n    },\n    exportAs: [\"bs-dropdown-toggle\"]\n  });\n  return BsDropdownToggleDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet BsDropdownModule = /*#__PURE__*/(() => {\n  class BsDropdownModule {\n    static forRoot() {\n      return {\n        ngModule: BsDropdownModule,\n        providers: [ComponentLoaderFactory, PositioningService, BsDropdownState]\n      };\n    }\n\n  }\n\n  BsDropdownModule.ɵfac = function BsDropdownModule_Factory(t) {\n    return new (t || BsDropdownModule)();\n  };\n\n  BsDropdownModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BsDropdownModule\n  });\n  BsDropdownModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return BsDropdownModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };","map":{"version":3,"names":["i0","EventEmitter","Injectable","Component","ChangeDetectionStrategy","Directive","Input","Output","HostListener","HostBinding","NgModule","filter","isBs3","i2","style","animate","i3","CommonModule","i1","ComponentLoaderFactory","PositioningService","DROPDOWN_ANIMATION_TIMING","dropdownAnimation","height","overflow","BsDropdownState","constructor","direction","autoClose","insideClick","isAnimated","stopOnClickPropagation","isOpenChange","isDisabledChange","toggleClick","counts","dropdownMenu","Promise","resolve","resolveDropdownMenu","ɵfac","ɵprov","BsDropdownContainerComponent","_state","cd","_renderer","_element","_builder","isOpen","_factoryDropDownAnimation","build","_subscription","subscribe","value","dropdown","nativeElement","querySelector","addClass","classList","contains","setStyle","create","play","markForCheck","detectChanges","_contains","el","ngOnDestroy","unsubscribe","ChangeDetectorRef","Renderer2","ElementRef","AnimationBuilder","ɵcmp","NgClass","BsDropdownConfig","BsDropdownDirective","_elementRef","_viewContainerRef","_cis","_config","dropup","_isInlineOpen","_isDisabled","_subscriptions","_isInited","_dropdown","createLoader","provide","useValue","onShown","onHidden","isDisabled","emit","hide","_showInline","isShown","show","isBs4","container","ngOnInit","listen","outsideClick","triggers","push","toggle","pipe","_inlinedMenu","then","attachInline","viewContainer","templateRef","_inlineViewRef","addBs4Polyfills","rootNodes","parentNode","playAnimation","catch","_dropup","_placement","placement","attach","to","position","attachment","content","removeShowClass","removeDropupStyles","event","target","instance","navigationClick","ref","firstActive","ownerDocument","activeElement","allRef","querySelectorAll","keyCode","focus","length","preventDefault","sub","dispose","addShowClass","checkRightAlignment","addDropupStyles","setTimeout","removeClass","isRightAligned","removeStyle","ViewContainerRef","ɵdir","BsDropdownMenuDirective","_viewContainer","_templateRef","TemplateRef","BsDropdownToggleDirective","_changeDetectorRef","_documentClickListener","button","_escKeyUpListener","onClick","stopPropagation","BsDropdownModule","forRoot","ngModule","providers","ɵmod","ɵinj"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/ngx-bootstrap/dropdown/fesm2015/ngx-bootstrap-dropdown.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Injectable, Component, ChangeDetectionStrategy, Directive, Input, Output, HostListener, HostBinding, NgModule } from '@angular/core';\nimport { filter } from 'rxjs/operators';\nimport { isBs3 } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/animations';\nimport { style, animate } from '@angular/animations';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\nconst DROPDOWN_ANIMATION_TIMING = '220ms cubic-bezier(0, 0, 0.2, 1)';\nconst dropdownAnimation = [\n    style({ height: 0, overflow: 'hidden' }),\n    animate(DROPDOWN_ANIMATION_TIMING, style({ height: '*', overflow: 'hidden' }))\n];\n\nclass BsDropdownState {\n    constructor() {\n        this.direction = 'down';\n        this.autoClose = true;\n        this.insideClick = false;\n        this.isAnimated = false;\n        this.stopOnClickPropagation = false;\n        this.isOpenChange = new EventEmitter();\n        this.isDisabledChange = new EventEmitter();\n        this.toggleClick = new EventEmitter();\n        this.counts = 0;\n        this.dropdownMenu = new Promise(resolve => {\n            this.resolveDropdownMenu = resolve;\n        });\n    }\n}\nBsDropdownState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownState, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownState, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownState, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\n// todo: revert ngClass to [class] when false positive angular-cli issue is fixed\n//          [class.dropdown]=\"direction === 'down'\"-->\nclass BsDropdownContainerComponent {\n    constructor(_state, cd, _renderer, _element, _builder) {\n        this._state = _state;\n        this.cd = cd;\n        this._renderer = _renderer;\n        this._element = _element;\n        this.isOpen = false;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        this._subscription = _state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            const dropdown = this._element.nativeElement.querySelector('.dropdown-menu');\n            this._renderer.addClass(this._element.nativeElement.querySelector('div'), 'open');\n            if (dropdown && !isBs3()) {\n                this._renderer.addClass(dropdown, 'show');\n                if (dropdown.classList.contains('dropdown-menu-right') || dropdown.classList.contains('dropdown-menu-end')) {\n                    this._renderer.setStyle(dropdown, 'left', 'auto');\n                    this._renderer.setStyle(dropdown, 'right', '0');\n                }\n                if (this.direction === 'up') {\n                    this._renderer.setStyle(dropdown, 'top', 'auto');\n                    this._renderer.setStyle(dropdown, 'transform', 'translateY(-101%)');\n                }\n            }\n            if (dropdown && this._state.isAnimated) {\n                this._factoryDropDownAnimation.create(dropdown)\n                    .play();\n            }\n            this.cd.markForCheck();\n            this.cd.detectChanges();\n        });\n    }\n    get direction() {\n        return this._state.direction;\n    }\n    /** @internal */\n    _contains(el) {\n        return this._element.nativeElement.contains(el);\n    }\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n    }\n}\nBsDropdownContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownContainerComponent, deps: [{ token: BsDropdownState }, { token: i0.ChangeDetectorRef }, { token: i0.Renderer2 }, { token: i0.ElementRef }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Component });\nBsDropdownContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: BsDropdownContainerComponent, selector: \"bs-dropdown-container\", host: { styleAttribute: \"display:block;position: absolute;z-index: 1040\" }, ngImport: i0, template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownContainerComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'bs-dropdown-container',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        style: 'display:block;position: absolute;z-index: 1040'\n                    },\n                    template: `\n    <div [class.dropup]=\"direction === 'up'\"\n         [ngClass]=\"{dropdown: direction === 'down'}\"\n         [class.show]=\"isOpen\"\n         [class.open]=\"isOpen\"><ng-content></ng-content>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ChangeDetectorRef }, { type: i0.Renderer2 }, { type: i0.ElementRef }, { type: i2.AnimationBuilder }]; } });\n\n/** Default dropdown configuration */\nclass BsDropdownConfig {\n    constructor() {\n        /** default dropdown auto closing behavior */\n        this.autoClose = true;\n        /** default dropdown auto closing behavior */\n        this.insideClick = false;\n        /** turn on/off animation */\n        this.isAnimated = false;\n        /** value true of stopOnClickPropagation allows event stopPropagation*/\n        this.stopOnClickPropagation = false;\n    }\n}\nBsDropdownConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nBsDropdownConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass BsDropdownDirective {\n    constructor(_elementRef, _renderer, _viewContainerRef, _cis, _state, _config, _builder) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._viewContainerRef = _viewContainerRef;\n        this._cis = _cis;\n        this._state = _state;\n        this._config = _config;\n        /**\n         * This attribute indicates that the dropdown should be opened upwards\n         */\n        this.dropup = false;\n        // todo: move to component loader\n        this._isInlineOpen = false;\n        this._isDisabled = false;\n        this._subscriptions = [];\n        this._isInited = false;\n        // set initial dropdown state from config\n        this._state.autoClose = this._config.autoClose;\n        this._state.insideClick = this._config.insideClick;\n        this._state.isAnimated = this._config.isAnimated;\n        this._state.stopOnClickPropagation = this._config.stopOnClickPropagation;\n        this._factoryDropDownAnimation = _builder.build(dropdownAnimation);\n        // create dropdown component loader\n        this._dropdown = this._cis\n            .createLoader(this._elementRef, this._viewContainerRef, this._renderer)\n            .provide({ provide: BsDropdownState, useValue: this._state });\n        this.onShown = this._dropdown.onShown;\n        this.onHidden = this._dropdown.onHidden;\n        this.isOpenChange = this._state.isOpenChange;\n    }\n    /**\n     * Indicates that dropdown will be closed on item or document click,\n     * and after pressing ESC\n     */\n    set autoClose(value) {\n        this._state.autoClose = value;\n    }\n    get autoClose() {\n        return this._state.autoClose;\n    }\n    /**\n     * Indicates that dropdown will be animated\n     */\n    set isAnimated(value) {\n        this._state.isAnimated = value;\n    }\n    get isAnimated() {\n        return this._state.isAnimated;\n    }\n    /**\n     * This attribute indicates that the dropdown shouldn't close on inside click when autoClose is set to true\n     */\n    set insideClick(value) {\n        this._state.insideClick = value;\n    }\n    get insideClick() {\n        return this._state.insideClick;\n    }\n    /**\n     * Disables dropdown toggle and hides dropdown menu if opened\n     */\n    set isDisabled(value) {\n        this._isDisabled = value;\n        this._state.isDisabledChange.emit(value);\n        if (value) {\n            this.hide();\n        }\n    }\n    get isDisabled() {\n        return this._isDisabled;\n    }\n    /**\n     * Returns whether or not the popover is currently being shown\n     */\n    get isOpen() {\n        if (this._showInline) {\n            return this._isInlineOpen;\n        }\n        return this._dropdown.isShown;\n    }\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    get isBs4() {\n        return !isBs3();\n    }\n    get _showInline() {\n        return !this.container;\n    }\n    ngOnInit() {\n        // fix: seems there are an issue with `routerLinkActive`\n        // which result in duplicated call ngOnInit without call to ngOnDestroy\n        // read more: https://github.com/valor-software/ngx-bootstrap/issues/1885\n        if (this._isInited) {\n            return;\n        }\n        this._isInited = true;\n        // attach DOM listeners\n        this._dropdown.listen({\n            // because of dropdown inline mode\n            outsideClick: false,\n            triggers: this.triggers,\n            show: () => this.show()\n        });\n        // toggle visibility on toggle element click\n        this._subscriptions.push(this._state.toggleClick.subscribe((value) => this.toggle(value)));\n        // hide dropdown if set disabled while opened\n        this._subscriptions.push(this._state.isDisabledChange\n            .pipe(filter((value) => value))\n            .subscribe(( /*value: boolean*/) => this.hide()));\n    }\n    /**\n     * Opens an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    show() {\n        if (this.isOpen || this.isDisabled) {\n            return;\n        }\n        if (this._showInline) {\n            if (!this._inlinedMenu) {\n                this._state.dropdownMenu.then((dropdownMenu) => {\n                    this._dropdown.attachInline(dropdownMenu.viewContainer, dropdownMenu.templateRef);\n                    this._inlinedMenu = this._dropdown._inlineViewRef;\n                    this.addBs4Polyfills();\n                    if (this._inlinedMenu) {\n                        this._renderer.addClass(this._inlinedMenu.rootNodes[0].parentNode, 'open');\n                    }\n                    this.playAnimation();\n                })\n                    // swallow errors\n                    .catch();\n            }\n            this.addBs4Polyfills();\n            this._isInlineOpen = true;\n            this.onShown.emit(true);\n            this._state.isOpenChange.emit(true);\n            this.playAnimation();\n            return;\n        }\n        this._state.dropdownMenu.then(dropdownMenu => {\n            // check direction in which dropdown should be opened\n            const _dropup = this.dropup ||\n                (typeof this.dropup !== 'undefined' && this.dropup);\n            this._state.direction = _dropup ? 'up' : 'down';\n            const _placement = this.placement || (_dropup ? 'top start' : 'bottom start');\n            // show dropdown\n            this._dropdown\n                .attach(BsDropdownContainerComponent)\n                .to(this.container)\n                .position({ attachment: _placement })\n                .show({\n                content: dropdownMenu.templateRef,\n                placement: _placement\n            });\n            this._state.isOpenChange.emit(true);\n        })\n            // swallow error\n            .catch();\n    }\n    /**\n     * Closes an element’s popover. This is considered a “manual” triggering of\n     * the popover.\n     */\n    hide() {\n        if (!this.isOpen) {\n            return;\n        }\n        if (this._showInline) {\n            this.removeShowClass();\n            this.removeDropupStyles();\n            this._isInlineOpen = false;\n            this.onHidden.emit(true);\n        }\n        else {\n            this._dropdown.hide();\n        }\n        this._state.isOpenChange.emit(false);\n    }\n    /**\n     * Toggles an element’s popover. This is considered a “manual” triggering of\n     * the popover. With parameter <code>true</code> allows toggling, with parameter <code>false</code>\n     * only hides opened dropdown. Parameter usage will be removed in ngx-bootstrap v3\n     */\n    toggle(value) {\n        if (this.isOpen || !value) {\n            return this.hide();\n        }\n        return this.show();\n    }\n    /** @internal */\n    _contains(event) {\n        // todo: valorkin fix typings\n        return this._elementRef.nativeElement.contains(event.target) ||\n            (this._dropdown.instance && this._dropdown.instance._contains(event.target));\n    }\n    navigationClick(event) {\n        const ref = this._elementRef.nativeElement.querySelector('.dropdown-menu');\n        if (!ref) {\n            return;\n        }\n        const firstActive = this._elementRef.nativeElement.ownerDocument.activeElement;\n        const allRef = ref.querySelectorAll('.dropdown-item');\n        switch (event.keyCode) {\n            case 38:\n                if (this._state.counts > 0) {\n                    allRef[--this._state.counts].focus();\n                }\n                break;\n            case 40:\n                if (this._state.counts + 1 < allRef.length) {\n                    if (firstActive.classList !== allRef[this._state.counts].classList) {\n                        allRef[this._state.counts].focus();\n                    }\n                    else {\n                        allRef[++this._state.counts].focus();\n                    }\n                }\n                break;\n            default:\n        }\n        event.preventDefault();\n    }\n    ngOnDestroy() {\n        // clean up subscriptions and destroy dropdown\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n        this._dropdown.dispose();\n    }\n    addBs4Polyfills() {\n        if (!isBs3()) {\n            this.addShowClass();\n            this.checkRightAlignment();\n            this.addDropupStyles();\n        }\n    }\n    playAnimation() {\n        if (this._state.isAnimated && this._inlinedMenu) {\n            setTimeout(() => {\n                if (this._inlinedMenu) {\n                    this._factoryDropDownAnimation.create(this._inlinedMenu.rootNodes[0]).play();\n                }\n            });\n        }\n    }\n    addShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.addClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    removeShowClass() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeClass(this._inlinedMenu.rootNodes[0], 'show');\n        }\n    }\n    checkRightAlignment() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            const isRightAligned = this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-right') || this._inlinedMenu.rootNodes[0].classList.contains('dropdown-menu-end');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'left', isRightAligned ? 'auto' : '0');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'right', isRightAligned ? '0' : 'auto');\n        }\n    }\n    addDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            // a little hack to not break support of bootstrap 4 beta\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'top', this.dropup ? 'auto' : '100%');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'transform', this.dropup ? 'translateY(-101%)' : 'translateY(0)');\n            this._renderer.setStyle(this._inlinedMenu.rootNodes[0], 'bottom', 'auto');\n        }\n    }\n    removeDropupStyles() {\n        if (this._inlinedMenu && this._inlinedMenu.rootNodes[0]) {\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'top');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'transform');\n            this._renderer.removeStyle(this._inlinedMenu.rootNodes[0], 'bottom');\n        }\n    }\n}\nBsDropdownDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownDirective, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ViewContainerRef }, { token: i1.ComponentLoaderFactory }, { token: BsDropdownState }, { token: BsDropdownConfig }, { token: i2.AnimationBuilder }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: BsDropdownDirective, selector: \"[bsDropdown], [dropdown]\", inputs: { placement: \"placement\", triggers: \"triggers\", container: \"container\", dropup: \"dropup\", autoClose: \"autoClose\", isAnimated: \"isAnimated\", insideClick: \"insideClick\", isDisabled: \"isDisabled\", isOpen: \"isOpen\" }, outputs: { isOpenChange: \"isOpenChange\", onShown: \"onShown\", onHidden: \"onHidden\" }, host: { listeners: { \"keydown.arrowDown\": \"navigationClick($event)\", \"keydown.arrowUp\": \"navigationClick($event)\" }, properties: { \"class.dropup\": \"dropup\", \"class.open\": \"isOpen\", \"class.show\": \"isOpen && isBs4\" } }, providers: [BsDropdownState], exportAs: [\"bs-dropdown\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdown], [dropdown]',\n                    exportAs: 'bs-dropdown',\n                    providers: [BsDropdownState],\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[class.dropup]': 'dropup',\n                        '[class.open]': 'isOpen',\n                        '[class.show]': 'isOpen && isBs4'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ViewContainerRef }, { type: i1.ComponentLoaderFactory }, { type: BsDropdownState }, { type: BsDropdownConfig }, { type: i2.AnimationBuilder }]; }, propDecorators: { placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], dropup: [{\n                type: Input\n            }], autoClose: [{\n                type: Input\n            }], isAnimated: [{\n                type: Input\n            }], insideClick: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }], isOpenChange: [{\n                type: Output\n            }], onShown: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], navigationClick: [{\n                type: HostListener,\n                args: ['keydown.arrowDown', ['$event']]\n            }, {\n                type: HostListener,\n                args: ['keydown.arrowUp', ['$event']]\n            }] } });\n\nclass BsDropdownMenuDirective {\n    constructor(_state, _viewContainer, _templateRef) {\n        _state.resolveDropdownMenu({\n            templateRef: _templateRef,\n            viewContainer: _viewContainer\n        });\n    }\n}\nBsDropdownMenuDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownMenuDirective, deps: [{ token: BsDropdownState }, { token: i0.ViewContainerRef }, { token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownMenuDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: BsDropdownMenuDirective, selector: \"[bsDropdownMenu],[dropdownMenu]\", exportAs: [\"bs-dropdown-menu\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownMenuDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownMenu],[dropdownMenu]',\n                    exportAs: 'bs-dropdown-menu'\n                }]\n        }], ctorParameters: function () { return [{ type: BsDropdownState }, { type: i0.ViewContainerRef }, { type: i0.TemplateRef }]; } });\n\nclass BsDropdownToggleDirective {\n    constructor(_changeDetectorRef, _dropdown, _element, _renderer, _state) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dropdown = _dropdown;\n        this._element = _element;\n        this._renderer = _renderer;\n        this._state = _state;\n        this.isOpen = false;\n        this._subscriptions = [];\n        // sync is open value with state\n        this._subscriptions.push(this._state.isOpenChange.subscribe((value) => {\n            this.isOpen = value;\n            if (value) {\n                this._documentClickListener = this._renderer.listen('document', 'click', (event) => {\n                    if (this._state.autoClose && event.button !== 2 &&\n                        !this._element.nativeElement.contains(event.target) &&\n                        !(this._state.insideClick && this._dropdown._contains(event))) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n                this._escKeyUpListener = this._renderer.listen(this._element.nativeElement, 'keyup.esc', () => {\n                    if (this._state.autoClose) {\n                        this._state.toggleClick.emit(false);\n                        this._changeDetectorRef.detectChanges();\n                    }\n                });\n            }\n            else {\n                this._documentClickListener && this._documentClickListener();\n                this._escKeyUpListener && this._escKeyUpListener();\n            }\n        }));\n        // populate disabled state\n        this._subscriptions.push(this._state.isDisabledChange\n            .subscribe((value) => this.isDisabled = value || void 0));\n    }\n    onClick(event) {\n        if (this._state.stopOnClickPropagation) {\n            event.stopPropagation();\n        }\n        if (this.isDisabled) {\n            return;\n        }\n        this._state.toggleClick.emit(true);\n    }\n    ngOnDestroy() {\n        if (this._documentClickListener) {\n            this._documentClickListener();\n        }\n        if (this._escKeyUpListener) {\n            this._escKeyUpListener();\n        }\n        for (const sub of this._subscriptions) {\n            sub.unsubscribe();\n        }\n    }\n}\nBsDropdownToggleDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownToggleDirective, deps: [{ token: i0.ChangeDetectorRef }, { token: BsDropdownDirective }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: BsDropdownState }], target: i0.ɵɵFactoryTarget.Directive });\nBsDropdownToggleDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: BsDropdownToggleDirective, selector: \"[bsDropdownToggle],[dropdownToggle]\", host: { listeners: { \"click\": \"onClick($event)\" }, properties: { \"attr.aria-haspopup\": \"true\", \"attr.disabled\": \"this.isDisabled\", \"attr.aria-expanded\": \"this.isOpen\" } }, exportAs: [\"bs-dropdown-toggle\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownToggleDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[bsDropdownToggle],[dropdownToggle]',\n                    exportAs: 'bs-dropdown-toggle',\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\n                    host: {\n                        '[attr.aria-haspopup]': 'true'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: BsDropdownDirective }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: BsDropdownState }]; }, propDecorators: { isDisabled: [{\n                type: HostBinding,\n                args: ['attr.disabled']\n            }], isOpen: [{\n                type: HostBinding,\n                args: ['attr.aria-expanded']\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event']]\n            }] } });\n\nclass BsDropdownModule {\n    static forRoot() {\n        return {\n            ngModule: BsDropdownModule,\n            providers: [\n                ComponentLoaderFactory,\n                PositioningService,\n                BsDropdownState\n            ]\n        };\n    }\n}\nBsDropdownModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nBsDropdownModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownModule, declarations: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownContainerComponent,\n        BsDropdownDirective], imports: [CommonModule], exports: [BsDropdownMenuDirective,\n        BsDropdownToggleDirective,\n        BsDropdownDirective] });\nBsDropdownModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: BsDropdownModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownContainerComponent,\n                        BsDropdownDirective\n                    ],\n                    exports: [\n                        BsDropdownMenuDirective,\n                        BsDropdownToggleDirective,\n                        BsDropdownDirective\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BsDropdownConfig, BsDropdownContainerComponent, BsDropdownDirective, BsDropdownMenuDirective, BsDropdownModule, BsDropdownState, BsDropdownToggleDirective };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}