{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { getBsVer, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport * as i3 from 'ngx-bootstrap/positioning';\nimport { PlacementForBs5, PositioningService } from 'ngx-bootstrap/positioning';\nimport { __decorate, __metadata } from 'tslib';\nimport { timer } from 'rxjs';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { CommonModule } from '@angular/common';\n/** Default values provider for tooltip */\n\nconst _c0 = [\"*\"];\nlet TooltipConfig = /*#__PURE__*/(() => {\n  class TooltipConfig {\n    constructor() {\n      /** sets disable adaptive position */\n      this.adaptivePosition = true;\n      /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n\n      this.placement = 'top';\n      /** array of event names which triggers tooltip opening */\n\n      this.triggers = 'hover focus';\n      /** delay before showing the tooltip */\n\n      this.delay = 0;\n    }\n\n  }\n\n  TooltipConfig.ɵfac = function TooltipConfig_Factory(t) {\n    return new (t || TooltipConfig)();\n  };\n\n  TooltipConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TooltipConfig,\n    factory: TooltipConfig.ɵfac,\n    providedIn: 'root'\n  });\n  return TooltipConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TooltipContainerComponent = /*#__PURE__*/(() => {\n  class TooltipContainerComponent {\n    constructor(config) {\n      Object.assign(this, config);\n    }\n\n    get _bsVersions() {\n      return getBsVer();\n    }\n\n    ngAfterViewInit() {\n      this.classMap = {\n        in: false,\n        fade: false\n      };\n\n      if (this.placement) {\n        if (this._bsVersions.isBs5) {\n          this.placement = PlacementForBs5[this.placement];\n        }\n\n        this.classMap[this.placement] = true;\n      }\n\n      this.classMap[`tooltip-${this.placement}`] = true;\n      this.classMap[\"in\"] = true;\n\n      if (this.animation) {\n        this.classMap[\"fade\"] = true;\n      }\n\n      if (this.containerClass) {\n        this.classMap[this.containerClass] = true;\n      }\n    }\n\n  }\n\n  TooltipContainerComponent.ɵfac = function TooltipContainerComponent_Factory(t) {\n    return new (t || TooltipContainerComponent)(i0.ɵɵdirectiveInject(TooltipConfig));\n  };\n\n  TooltipContainerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TooltipContainerComponent,\n    selectors: [[\"bs-tooltip-container\"]],\n    hostAttrs: [\"role\", \"tooltip\"],\n    hostVars: 7,\n    hostBindings: function TooltipContainerComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.id);\n        i0.ɵɵclassMap(\"tooltip in tooltip-\" + ctx.placement + \" \" + \"bs-tooltip-\" + ctx.placement + \" \" + ctx.placement + \" \" + ctx.containerClass);\n        i0.ɵɵclassProp(\"show\", !ctx._bsVersions.isBs3)(\"bs3\", ctx._bsVersions.isBs3);\n      }\n    },\n    ngContentSelectors: _c0,\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"tooltip-arrow\", \"arrow\"], [1, \"tooltip-inner\"]],\n    template: function TooltipContainerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".tooltip[_nghost-%COMP%]{display:block;pointer-events:none}.bs3.tooltip.top[_nghost-%COMP%] > .arrow[_ngcontent-%COMP%]{margin-left:-2px}.bs3.tooltip.bottom[_nghost-%COMP%]{margin-top:0}.bs3.bs-tooltip-left[_nghost-%COMP%], .bs3.bs-tooltip-right[_nghost-%COMP%]{margin:0}.bs3.bs-tooltip-right[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%], .bs3.bs-tooltip-left[_nghost-%COMP%]   .arrow[_ngcontent-%COMP%]{margin:.3rem 0}\"],\n    changeDetection: 0\n  });\n  return TooltipContainerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet id = 0;\nlet TooltipDirective = /*#__PURE__*/(() => {\n  class TooltipDirective {\n    constructor(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n      this._elementRef = _elementRef;\n      this._renderer = _renderer;\n      this._positionService = _positionService;\n      this.tooltipId = id++;\n      /** sets disable adaptive position */\n\n      this.adaptivePosition = true;\n      /** Fired when tooltip content changes */\n\n      this.tooltipChange = new EventEmitter();\n      /**\n       * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n       */\n\n      this.placement = 'top';\n      /**\n       * Specifies events that should trigger. Supports a space separated list of\n       * event names.\n       */\n\n      this.triggers = 'hover focus';\n      /**\n       * Css class for tooltip container\n       */\n\n      this.containerClass = '';\n      /**\n       * Allows to disable tooltip\n       */\n\n      this.isDisabled = false;\n      /**\n       * Delay before showing the tooltip\n       */\n\n      this.delay = 0;\n      /** @deprecated - removed, will be added to configuration */\n\n      this.tooltipAnimation = true;\n      /** @deprecated */\n\n      this.tooltipFadeDuration = 150;\n      /** @deprecated */\n\n      this.tooltipStateChanged = new EventEmitter();\n      this._tooltip = cis.createLoader(this._elementRef, _viewContainerRef, this._renderer).provide({\n        provide: TooltipConfig,\n        useValue: config\n      });\n      Object.assign(this, config);\n      this.onShown = this._tooltip.onShown;\n      this.onHidden = this._tooltip.onHidden;\n    }\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n\n\n    get isOpen() {\n      return this._tooltip.isShown;\n    }\n\n    set isOpen(value) {\n      if (value) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n    /** @deprecated - please use `tooltip` instead */\n\n\n    set htmlContent(value) {\n      warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n      this.tooltip = value;\n    }\n    /** @deprecated - please use `placement` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _placement(value) {\n      warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n      this.placement = value;\n    }\n    /** @deprecated - please use `isOpen` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _isOpen(value) {\n      warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n      this.isOpen = value;\n    }\n\n    get _isOpen() {\n      warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n      return this.isOpen;\n    }\n    /** @deprecated - please use `isDisabled` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _enable(value) {\n      warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n      this.isDisabled = !value;\n    }\n\n    get _enable() {\n      warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n      return this.isDisabled;\n    }\n    /** @deprecated - please use `container=\"body\"` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _appendToBody(value) {\n      warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n      this.container = value ? 'body' : this.container;\n    }\n\n    get _appendToBody() {\n      warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n      return this.container === 'body';\n    }\n    /** @deprecated - will replaced with customClass */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _popupClass(value) {\n      warnOnce('tooltipClass deprecated');\n    }\n    /** @deprecated - removed */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _tooltipContext(value) {\n      warnOnce('tooltipContext deprecated');\n    }\n    /** @deprecated */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n    set _tooltipPopupDelay(value) {\n      warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n      this.delay = value;\n    }\n    /** @deprecated -  please use `triggers` instead */\n\n\n    get _tooltipTrigger() {\n      warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n      return this.triggers;\n    }\n\n    set _tooltipTrigger(value) {\n      warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n      this.triggers = (value || '').toString();\n    }\n\n    ngOnInit() {\n      this._tooltip.listen({\n        triggers: this.triggers,\n        show: () => this.show()\n      });\n\n      this.tooltipChange.subscribe(value => {\n        if (!value) {\n          this._tooltip.hide();\n        }\n      });\n      this.onShown.subscribe(() => {\n        this.setAriaDescribedBy();\n      });\n      this.onHidden.subscribe(() => {\n        this.setAriaDescribedBy();\n      });\n    }\n\n    setAriaDescribedBy() {\n      this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : void 0;\n\n      if (this._ariaDescribedby) {\n        this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n      } else {\n        this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n      }\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n\n\n    toggle() {\n      if (this.isOpen) {\n        return this.hide();\n      }\n\n      this.show();\n    }\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n\n\n    show() {\n      this._positionService.setOptions({\n        modifiers: {\n          flip: {\n            enabled: this.adaptivePosition\n          },\n          preventOverflow: {\n            enabled: this.adaptivePosition,\n            boundariesElement: this.boundariesElement || 'scrollParent'\n          }\n        }\n      });\n\n      if (this.isOpen || this.isDisabled || this._delayTimeoutId || !this.tooltip) {\n        return;\n      }\n\n      const showTooltip = () => {\n        if (this._delayTimeoutId) {\n          this._delayTimeoutId = undefined;\n        }\n\n        this._tooltip.attach(TooltipContainerComponent).to(this.container).position({\n          attachment: this.placement\n        }).show({\n          content: this.tooltip,\n          placement: this.placement,\n          containerClass: this.containerClass,\n          id: `tooltip-${this.tooltipId}`\n        });\n      };\n\n      const cancelDelayedTooltipShowing = () => {\n        if (this._tooltipCancelShowFn) {\n          this._tooltipCancelShowFn();\n        }\n      };\n\n      if (this.delay) {\n        if (this._delaySubscription) {\n          this._delaySubscription.unsubscribe();\n        }\n\n        this._delaySubscription = timer(this.delay).subscribe(() => {\n          showTooltip();\n          cancelDelayedTooltipShowing();\n        });\n\n        if (this.triggers) {\n          parseTriggers(this.triggers).forEach(trigger => {\n            if (!trigger.close) {\n              return;\n            }\n\n            this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, () => {\n              var _a;\n\n              (_a = this._delaySubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n              cancelDelayedTooltipShowing();\n            });\n          });\n        }\n      } else {\n        showTooltip();\n      }\n    }\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n\n\n    hide() {\n      var _a;\n\n      if (this._delayTimeoutId) {\n        clearTimeout(this._delayTimeoutId);\n        this._delayTimeoutId = undefined;\n      }\n\n      if (!this._tooltip.isShown) {\n        return;\n      }\n\n      if ((_a = this._tooltip.instance) === null || _a === void 0 ? void 0 : _a.classMap) {\n        this._tooltip.instance.classMap[\"in\"] = false;\n      }\n\n      setTimeout(() => {\n        this._tooltip.hide();\n      }, this.tooltipFadeDuration);\n    }\n\n    ngOnDestroy() {\n      this._tooltip.dispose();\n\n      this.tooltipChange.unsubscribe();\n\n      if (this._delaySubscription) {\n        this._delaySubscription.unsubscribe();\n      }\n\n      this.onShown.unsubscribe();\n      this.onHidden.unsubscribe();\n    }\n\n  }\n\n  TooltipDirective.ɵfac = function TooltipDirective_Factory(t) {\n    return new (t || TooltipDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i1.ComponentLoaderFactory), i0.ɵɵdirectiveInject(TooltipConfig), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3.PositioningService));\n  };\n\n  TooltipDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: TooltipDirective,\n    selectors: [[\"\", \"tooltip\", \"\"], [\"\", \"tooltipHtml\", \"\"]],\n    inputs: {\n      adaptivePosition: \"adaptivePosition\",\n      tooltip: \"tooltip\",\n      placement: \"placement\",\n      triggers: \"triggers\",\n      container: \"container\",\n      containerClass: \"containerClass\",\n      boundariesElement: \"boundariesElement\",\n      isOpen: \"isOpen\",\n      isDisabled: \"isDisabled\",\n      delay: \"delay\",\n      htmlContent: [\"tooltipHtml\", \"htmlContent\"],\n      _placement: [\"tooltipPlacement\", \"_placement\"],\n      _isOpen: [\"tooltipIsOpen\", \"_isOpen\"],\n      _enable: [\"tooltipEnable\", \"_enable\"],\n      _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"],\n      tooltipAnimation: \"tooltipAnimation\",\n      _popupClass: [\"tooltipClass\", \"_popupClass\"],\n      _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"],\n      _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"],\n      tooltipFadeDuration: \"tooltipFadeDuration\",\n      _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"]\n    },\n    outputs: {\n      tooltipChange: \"tooltipChange\",\n      onShown: \"onShown\",\n      onHidden: \"onHidden\",\n      tooltipStateChanged: \"tooltipStateChanged\"\n    },\n    exportAs: [\"bs-tooltip\"]\n  });\n\n  __decorate([OnChange(), __metadata(\"design:type\", Object)], TooltipDirective.prototype, \"tooltip\", void 0);\n\n  return TooltipDirective;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TooltipModule = /*#__PURE__*/(() => {\n  class TooltipModule {\n    static forRoot() {\n      return {\n        ngModule: TooltipModule,\n        providers: [ComponentLoaderFactory, PositioningService]\n      };\n    }\n\n  }\n\n  TooltipModule.ɵfac = function TooltipModule_Factory(t) {\n    return new (t || TooltipModule)();\n  };\n\n  TooltipModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TooltipModule\n  });\n  TooltipModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return TooltipModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };","map":{"version":3,"names":["i0","Injectable","Component","ChangeDetectionStrategy","EventEmitter","Directive","Input","Output","NgModule","getBsVer","warnOnce","parseTriggers","OnChange","i3","PlacementForBs5","PositioningService","__decorate","__metadata","timer","i1","ComponentLoaderFactory","CommonModule","TooltipConfig","constructor","adaptivePosition","placement","triggers","delay","ɵfac","ɵprov","TooltipContainerComponent","config","Object","assign","_bsVersions","ngAfterViewInit","classMap","in","fade","isBs5","animation","containerClass","ɵcmp","id","TooltipDirective","_viewContainerRef","cis","_elementRef","_renderer","_positionService","tooltipId","tooltipChange","isDisabled","tooltipAnimation","tooltipFadeDuration","tooltipStateChanged","_tooltip","createLoader","provide","useValue","onShown","onHidden","isOpen","isShown","value","show","hide","htmlContent","tooltip","_placement","_isOpen","_enable","_appendToBody","container","_popupClass","_tooltipContext","_tooltipPopupDelay","_tooltipTrigger","toString","ngOnInit","listen","subscribe","setAriaDescribedBy","_ariaDescribedby","setAttribute","nativeElement","removeAttribute","toggle","setOptions","modifiers","flip","enabled","preventOverflow","boundariesElement","_delayTimeoutId","showTooltip","undefined","attach","to","position","attachment","content","cancelDelayedTooltipShowing","_tooltipCancelShowFn","_delaySubscription","unsubscribe","forEach","trigger","close","_a","clearTimeout","instance","setTimeout","ngOnDestroy","dispose","ViewContainerRef","ElementRef","Renderer2","ɵdir","prototype","TooltipModule","forRoot","ngModule","providers","ɵmod","ɵinj"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/ngx-bootstrap/tooltip/fesm2015/ngx-bootstrap-tooltip.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, EventEmitter, Directive, Input, Output, NgModule } from '@angular/core';\nimport { getBsVer, warnOnce, parseTriggers, OnChange } from 'ngx-bootstrap/utils';\nimport * as i3 from 'ngx-bootstrap/positioning';\nimport { PlacementForBs5, PositioningService } from 'ngx-bootstrap/positioning';\nimport { __decorate, __metadata } from 'tslib';\nimport { timer } from 'rxjs';\nimport * as i1 from 'ngx-bootstrap/component-loader';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { CommonModule } from '@angular/common';\n\n/** Default values provider for tooltip */\nclass TooltipConfig {\n    constructor() {\n        /** sets disable adaptive position */\n        this.adaptivePosition = true;\n        /** tooltip placement, supported positions: 'top', 'bottom', 'left', 'right' */\n        this.placement = 'top';\n        /** array of event names which triggers tooltip opening */\n        this.triggers = 'hover focus';\n        /** delay before showing the tooltip */\n        this.delay = 0;\n    }\n}\nTooltipConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTooltipConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipConfig, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\nclass TooltipContainerComponent {\n    constructor(config) {\n        Object.assign(this, config);\n    }\n    get _bsVersions() {\n        return getBsVer();\n    }\n    ngAfterViewInit() {\n        this.classMap = { in: false, fade: false };\n        if (this.placement) {\n            if (this._bsVersions.isBs5) {\n                this.placement = PlacementForBs5[this.placement];\n            }\n            this.classMap[this.placement] = true;\n        }\n        this.classMap[`tooltip-${this.placement}`] = true;\n        this.classMap[\"in\"] = true;\n        if (this.animation) {\n            this.classMap[\"fade\"] = true;\n        }\n        if (this.containerClass) {\n            this.classMap[this.containerClass] = true;\n        }\n    }\n}\nTooltipContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipContainerComponent, deps: [{ token: TooltipConfig }], target: i0.ɵɵFactoryTarget.Component });\nTooltipContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: TooltipContainerComponent, selector: \"bs-tooltip-container\", host: { attributes: { \"role\": \"tooltip\" }, properties: { \"class\": \"\\\"tooltip in tooltip-\\\" + placement + \\\" \\\" + \\\"bs-tooltip-\\\" + placement + \\\" \\\" + placement + \\\" \\\" + containerClass\", \"class.show\": \"!_bsVersions.isBs3\", \"class.bs3\": \"_bsVersions.isBs3\", \"attr.id\": \"this.id\" } }, ngImport: i0, template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `, isInline: true, styles: [\":host.tooltip{display:block;pointer-events:none}:host.bs3.tooltip.top>.arrow{margin-left:-2px}:host.bs3.tooltip.bottom{margin-top:0}:host.bs3.bs-tooltip-left,:host.bs3.bs-tooltip-right{margin:0}:host.bs3.bs-tooltip-right .arrow,:host.bs3.bs-tooltip-left .arrow{margin:.3rem 0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipContainerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'bs-tooltip-container', changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        '[class]': '\"tooltip in tooltip-\" + placement + \" \" + \"bs-tooltip-\" + placement + \" \" + placement + \" \" + containerClass',\n                        '[class.show]': '!_bsVersions.isBs3',\n                        '[class.bs3]': '_bsVersions.isBs3',\n                        '[attr.id]': 'this.id',\n                        role: 'tooltip'\n                    }, template: `\n    <div class=\"tooltip-arrow arrow\"></div>\n    <div class=\"tooltip-inner\"><ng-content></ng-content></div>\n    `, styles: [\":host.tooltip{display:block;pointer-events:none}:host.bs3.tooltip.top>.arrow{margin-left:-2px}:host.bs3.tooltip.bottom{margin-top:0}:host.bs3.bs-tooltip-left,:host.bs3.bs-tooltip-right{margin:0}:host.bs3.bs-tooltip-right .arrow,:host.bs3.bs-tooltip-left .arrow{margin:.3rem 0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TooltipConfig }]; } });\n\nlet id = 0;\nclass TooltipDirective {\n    constructor(_viewContainerRef, cis, config, _elementRef, _renderer, _positionService) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._positionService = _positionService;\n        this.tooltipId = id++;\n        /** sets disable adaptive position */\n        this.adaptivePosition = true;\n        /** Fired when tooltip content changes */\n        this.tooltipChange = new EventEmitter();\n        /**\n         * Placement of a tooltip. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n         */\n        this.placement = 'top';\n        /**\n         * Specifies events that should trigger. Supports a space separated list of\n         * event names.\n         */\n        this.triggers = 'hover focus';\n        /**\n         * Css class for tooltip container\n         */\n        this.containerClass = '';\n        /**\n         * Allows to disable tooltip\n         */\n        this.isDisabled = false;\n        /**\n         * Delay before showing the tooltip\n         */\n        this.delay = 0;\n        /** @deprecated - removed, will be added to configuration */\n        this.tooltipAnimation = true;\n        /** @deprecated */\n        this.tooltipFadeDuration = 150;\n        /** @deprecated */\n        this.tooltipStateChanged = new EventEmitter();\n        this._tooltip = cis\n            .createLoader(this._elementRef, _viewContainerRef, this._renderer)\n            .provide({ provide: TooltipConfig, useValue: config });\n        Object.assign(this, config);\n        this.onShown = this._tooltip.onShown;\n        this.onHidden = this._tooltip.onHidden;\n    }\n    /**\n     * Returns whether or not the tooltip is currently being shown\n     */\n    get isOpen() {\n        return this._tooltip.isShown;\n    }\n    set isOpen(value) {\n        if (value) {\n            this.show();\n        }\n        else {\n            this.hide();\n        }\n    }\n    /** @deprecated - please use `tooltip` instead */\n    set htmlContent(value) {\n        warnOnce('tooltipHtml was deprecated, please use `tooltip` instead');\n        this.tooltip = value;\n    }\n    /** @deprecated - please use `placement` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _placement(value) {\n        warnOnce('tooltipPlacement was deprecated, please use `placement` instead');\n        this.placement = value;\n    }\n    /** @deprecated - please use `isOpen` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _isOpen(value) {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        this.isOpen = value;\n    }\n    get _isOpen() {\n        warnOnce('tooltipIsOpen was deprecated, please use `isOpen` instead');\n        return this.isOpen;\n    }\n    /** @deprecated - please use `isDisabled` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _enable(value) {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        this.isDisabled = !value;\n    }\n    get _enable() {\n        warnOnce('tooltipEnable was deprecated, please use `isDisabled` instead');\n        return this.isDisabled;\n    }\n    /** @deprecated - please use `container=\"body\"` instead */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _appendToBody(value) {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        this.container = value ? 'body' : this.container;\n    }\n    get _appendToBody() {\n        warnOnce('tooltipAppendToBody was deprecated, please use `container=\"body\"` instead');\n        return this.container === 'body';\n    }\n    /** @deprecated - will replaced with customClass */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _popupClass(value) {\n        warnOnce('tooltipClass deprecated');\n    }\n    /** @deprecated - removed */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _tooltipContext(value) {\n        warnOnce('tooltipContext deprecated');\n    }\n    /** @deprecated */\n    // eslint-disable-next-line @angular-eslint/no-input-rename\n    set _tooltipPopupDelay(value) {\n        warnOnce('tooltipPopupDelay is deprecated, use `delay` instead');\n        this.delay = value;\n    }\n    /** @deprecated -  please use `triggers` instead */\n    get _tooltipTrigger() {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        return this.triggers;\n    }\n    set _tooltipTrigger(value) {\n        warnOnce('tooltipTrigger was deprecated, please use `triggers` instead');\n        this.triggers = (value || '').toString();\n    }\n    ngOnInit() {\n        this._tooltip.listen({\n            triggers: this.triggers,\n            show: () => this.show()\n        });\n        this.tooltipChange.subscribe((value) => {\n            if (!value) {\n                this._tooltip.hide();\n            }\n        });\n        this.onShown.subscribe(() => {\n            this.setAriaDescribedBy();\n        });\n        this.onHidden.subscribe(() => {\n            this.setAriaDescribedBy();\n        });\n    }\n    setAriaDescribedBy() {\n        this._ariaDescribedby = this.isOpen ? `tooltip-${this.tooltipId}` : void 0;\n        if (this._ariaDescribedby) {\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ariaDescribedby);\n        }\n        else {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n        }\n    }\n    /**\n     * Toggles an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    toggle() {\n        if (this.isOpen) {\n            return this.hide();\n        }\n        this.show();\n    }\n    /**\n     * Opens an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    show() {\n        this._positionService.setOptions({\n            modifiers: {\n                flip: {\n                    enabled: this.adaptivePosition\n                },\n                preventOverflow: {\n                    enabled: this.adaptivePosition,\n                    boundariesElement: this.boundariesElement || 'scrollParent'\n                }\n            }\n        });\n        if (this.isOpen ||\n            this.isDisabled ||\n            this._delayTimeoutId ||\n            !this.tooltip) {\n            return;\n        }\n        const showTooltip = () => {\n            if (this._delayTimeoutId) {\n                this._delayTimeoutId = undefined;\n            }\n            this._tooltip\n                .attach(TooltipContainerComponent)\n                .to(this.container)\n                .position({ attachment: this.placement })\n                .show({\n                content: this.tooltip,\n                placement: this.placement,\n                containerClass: this.containerClass,\n                id: `tooltip-${this.tooltipId}`\n            });\n        };\n        const cancelDelayedTooltipShowing = () => {\n            if (this._tooltipCancelShowFn) {\n                this._tooltipCancelShowFn();\n            }\n        };\n        if (this.delay) {\n            if (this._delaySubscription) {\n                this._delaySubscription.unsubscribe();\n            }\n            this._delaySubscription = timer(this.delay).subscribe(() => {\n                showTooltip();\n                cancelDelayedTooltipShowing();\n            });\n            if (this.triggers) {\n                parseTriggers(this.triggers)\n                    .forEach((trigger) => {\n                    if (!trigger.close) {\n                        return;\n                    }\n                    this._tooltipCancelShowFn = this._renderer.listen(this._elementRef.nativeElement, trigger.close, () => {\n                        var _a;\n                        (_a = this._delaySubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n                        cancelDelayedTooltipShowing();\n                    });\n                });\n            }\n        }\n        else {\n            showTooltip();\n        }\n    }\n    /**\n     * Closes an element’s tooltip. This is considered a “manual” triggering of\n     * the tooltip.\n     */\n    hide() {\n        var _a;\n        if (this._delayTimeoutId) {\n            clearTimeout(this._delayTimeoutId);\n            this._delayTimeoutId = undefined;\n        }\n        if (!this._tooltip.isShown) {\n            return;\n        }\n        if ((_a = this._tooltip.instance) === null || _a === void 0 ? void 0 : _a.classMap) {\n            this._tooltip.instance.classMap[\"in\"] = false;\n        }\n        setTimeout(() => {\n            this._tooltip.hide();\n        }, this.tooltipFadeDuration);\n    }\n    ngOnDestroy() {\n        this._tooltip.dispose();\n        this.tooltipChange.unsubscribe();\n        if (this._delaySubscription) {\n            this._delaySubscription.unsubscribe();\n        }\n        this.onShown.unsubscribe();\n        this.onHidden.unsubscribe();\n    }\n}\nTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipDirective, deps: [{ token: i0.ViewContainerRef }, { token: i1.ComponentLoaderFactory }, { token: TooltipConfig }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i3.PositioningService }], target: i0.ɵɵFactoryTarget.Directive });\nTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.6\", type: TooltipDirective, selector: \"[tooltip], [tooltipHtml]\", inputs: { adaptivePosition: \"adaptivePosition\", tooltip: \"tooltip\", placement: \"placement\", triggers: \"triggers\", container: \"container\", containerClass: \"containerClass\", boundariesElement: \"boundariesElement\", isOpen: \"isOpen\", isDisabled: \"isDisabled\", delay: \"delay\", htmlContent: [\"tooltipHtml\", \"htmlContent\"], _placement: [\"tooltipPlacement\", \"_placement\"], _isOpen: [\"tooltipIsOpen\", \"_isOpen\"], _enable: [\"tooltipEnable\", \"_enable\"], _appendToBody: [\"tooltipAppendToBody\", \"_appendToBody\"], tooltipAnimation: \"tooltipAnimation\", _popupClass: [\"tooltipClass\", \"_popupClass\"], _tooltipContext: [\"tooltipContext\", \"_tooltipContext\"], _tooltipPopupDelay: [\"tooltipPopupDelay\", \"_tooltipPopupDelay\"], tooltipFadeDuration: \"tooltipFadeDuration\", _tooltipTrigger: [\"tooltipTrigger\", \"_tooltipTrigger\"] }, outputs: { tooltipChange: \"tooltipChange\", onShown: \"onShown\", onHidden: \"onHidden\", tooltipStateChanged: \"tooltipStateChanged\" }, exportAs: [\"bs-tooltip\"], ngImport: i0 });\n__decorate([\n    OnChange(),\n    __metadata(\"design:type\", Object)\n], TooltipDirective.prototype, \"tooltip\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[tooltip], [tooltipHtml]',\n                    exportAs: 'bs-tooltip'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i1.ComponentLoaderFactory }, { type: TooltipConfig }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i3.PositioningService }]; }, propDecorators: { adaptivePosition: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipChange: [{\n                type: Output\n            }], placement: [{\n                type: Input\n            }], triggers: [{\n                type: Input\n            }], container: [{\n                type: Input\n            }], containerClass: [{\n                type: Input\n            }], boundariesElement: [{\n                type: Input\n            }], isOpen: [{\n                type: Input\n            }], isDisabled: [{\n                type: Input\n            }], delay: [{\n                type: Input\n            }], onShown: [{\n                type: Output\n            }], onHidden: [{\n                type: Output\n            }], htmlContent: [{\n                type: Input,\n                args: ['tooltipHtml']\n            }], _placement: [{\n                type: Input,\n                args: ['tooltipPlacement']\n            }], _isOpen: [{\n                type: Input,\n                args: ['tooltipIsOpen']\n            }], _enable: [{\n                type: Input,\n                args: ['tooltipEnable']\n            }], _appendToBody: [{\n                type: Input,\n                args: ['tooltipAppendToBody']\n            }], tooltipAnimation: [{\n                type: Input\n            }], _popupClass: [{\n                type: Input,\n                args: ['tooltipClass']\n            }], _tooltipContext: [{\n                type: Input,\n                args: ['tooltipContext']\n            }], _tooltipPopupDelay: [{\n                type: Input,\n                args: ['tooltipPopupDelay']\n            }], tooltipFadeDuration: [{\n                type: Input\n            }], _tooltipTrigger: [{\n                type: Input,\n                args: ['tooltipTrigger']\n            }], tooltipStateChanged: [{\n                type: Output\n            }] } });\n\nclass TooltipModule {\n    static forRoot() {\n        return {\n            ngModule: TooltipModule,\n            providers: [ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipModule, declarations: [TooltipDirective, TooltipContainerComponent], imports: [CommonModule], exports: [TooltipDirective] });\nTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TooltipDirective, TooltipContainerComponent],\n                    exports: [TooltipDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TooltipConfig, TooltipContainerComponent, TooltipDirective, TooltipModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}