{"ast":null,"code":"import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n  let config;\n\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize,\n      windowTime,\n      refCount: false,\n      scheduler\n    };\n  }\n\n  return source => source.lift(shareReplayOperator(config));\n}\n\nfunction shareReplayOperator({\n  bufferSize = Number.POSITIVE_INFINITY,\n  windowTime = Number.POSITIVE_INFINITY,\n  refCount: useRefCount,\n  scheduler\n}) {\n  let subject;\n  let refCount = 0;\n  let subscription;\n  let hasError = false;\n  let isComplete = false;\n  return function shareReplayOperation(source) {\n    refCount++;\n\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n      subscription = source.subscribe({\n        next(value) {\n          subject.next(value);\n        },\n\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n\n        complete() {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        }\n\n      });\n    }\n\n    const innerSub = subject.subscribe(this);\n    this.add(() => {\n      refCount--;\n      innerSub.unsubscribe();\n\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}","map":{"version":3,"names":["ReplaySubject","shareReplay","configOrBufferSize","windowTime","scheduler","config","bufferSize","refCount","source","lift","shareReplayOperator","Number","POSITIVE_INFINITY","useRefCount","subject","subscription","hasError","isComplete","shareReplayOperation","subscribe","next","value","error","err","complete","undefined","innerSub","add","unsubscribe"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/rxjs/_esm2015/internal/operators/shareReplay.js"],"sourcesContent":["import { ReplaySubject } from '../ReplaySubject';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let config;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        config = configOrBufferSize;\n    }\n    else {\n        config = {\n            bufferSize: configOrBufferSize,\n            windowTime,\n            refCount: false,\n            scheduler\n        };\n    }\n    return (source) => source.lift(shareReplayOperator(config));\n}\nfunction shareReplayOperator({ bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, refCount: useRefCount, scheduler }) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next(value) { subject.next(value); },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subscription = undefined;\n                    subject.complete();\n                },\n            });\n        }\n        const innerSub = subject.subscribe(this);\n        this.add(() => {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && !isComplete && useRefCount && refCount === 0) {\n                subscription.unsubscribe();\n                subscription = undefined;\n                subject = undefined;\n            }\n        });\n    };\n}\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,OAAO,SAASC,WAAT,CAAqBC,kBAArB,EAAyCC,UAAzC,EAAqDC,SAArD,EAAgE;EACnE,IAAIC,MAAJ;;EACA,IAAIH,kBAAkB,IAAI,OAAOA,kBAAP,KAA8B,QAAxD,EAAkE;IAC9DG,MAAM,GAAGH,kBAAT;EACH,CAFD,MAGK;IACDG,MAAM,GAAG;MACLC,UAAU,EAAEJ,kBADP;MAELC,UAFK;MAGLI,QAAQ,EAAE,KAHL;MAILH;IAJK,CAAT;EAMH;;EACD,OAAQI,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAYC,mBAAmB,CAACL,MAAD,CAA/B,CAAnB;AACH;;AACD,SAASK,mBAAT,CAA6B;EAAEJ,UAAU,GAAGK,MAAM,CAACC,iBAAtB;EAAyCT,UAAU,GAAGQ,MAAM,CAACC,iBAA7D;EAAgFL,QAAQ,EAAEM,WAA1F;EAAuGT;AAAvG,CAA7B,EAAiJ;EAC7I,IAAIU,OAAJ;EACA,IAAIP,QAAQ,GAAG,CAAf;EACA,IAAIQ,YAAJ;EACA,IAAIC,QAAQ,GAAG,KAAf;EACA,IAAIC,UAAU,GAAG,KAAjB;EACA,OAAO,SAASC,oBAAT,CAA8BV,MAA9B,EAAsC;IACzCD,QAAQ;;IACR,IAAI,CAACO,OAAD,IAAYE,QAAhB,EAA0B;MACtBA,QAAQ,GAAG,KAAX;MACAF,OAAO,GAAG,IAAId,aAAJ,CAAkBM,UAAlB,EAA8BH,UAA9B,EAA0CC,SAA1C,CAAV;MACAW,YAAY,GAAGP,MAAM,CAACW,SAAP,CAAiB;QAC5BC,IAAI,CAACC,KAAD,EAAQ;UAAEP,OAAO,CAACM,IAAR,CAAaC,KAAb;QAAsB,CADR;;QAE5BC,KAAK,CAACC,GAAD,EAAM;UACPP,QAAQ,GAAG,IAAX;UACAF,OAAO,CAACQ,KAAR,CAAcC,GAAd;QACH,CAL2B;;QAM5BC,QAAQ,GAAG;UACPP,UAAU,GAAG,IAAb;UACAF,YAAY,GAAGU,SAAf;UACAX,OAAO,CAACU,QAAR;QACH;;MAV2B,CAAjB,CAAf;IAYH;;IACD,MAAME,QAAQ,GAAGZ,OAAO,CAACK,SAAR,CAAkB,IAAlB,CAAjB;IACA,KAAKQ,GAAL,CAAS,MAAM;MACXpB,QAAQ;MACRmB,QAAQ,CAACE,WAAT;;MACA,IAAIb,YAAY,IAAI,CAACE,UAAjB,IAA+BJ,WAA/B,IAA8CN,QAAQ,KAAK,CAA/D,EAAkE;QAC9DQ,YAAY,CAACa,WAAb;QACAb,YAAY,GAAGU,SAAf;QACAX,OAAO,GAAGW,SAAV;MACH;IACJ,CARD;EASH,CA5BD;AA6BH"},"metadata":{},"sourceType":"module"}