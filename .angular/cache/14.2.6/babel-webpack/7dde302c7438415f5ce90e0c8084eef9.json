{"ast":null,"code":"import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function window(windowBoundaries) {\n  return function windowOperatorFunction(source) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator {\n  constructor(windowBoundaries) {\n    this.windowBoundaries = windowBoundaries;\n  }\n\n  call(subscriber, source) {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n    }\n\n    return sourceSubscription;\n  }\n\n}\n\nclass WindowSubscriber extends OuterSubscriber {\n  constructor(destination) {\n    super(destination);\n    this.window = new Subject();\n    destination.next(this.window);\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.openWindow();\n  }\n\n  notifyError(error, innerSub) {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub) {\n    this._complete();\n  }\n\n  _next(value) {\n    this.window.next(value);\n  }\n\n  _error(err) {\n    this.window.error(err);\n    this.destination.error(err);\n  }\n\n  _complete() {\n    this.window.complete();\n    this.destination.complete();\n  }\n\n  _unsubscribe() {\n    this.window = null;\n  }\n\n  openWindow() {\n    const prevWindow = this.window;\n\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const destination = this.destination;\n    const newWindow = this.window = new Subject();\n    destination.next(newWindow);\n  }\n\n}","map":{"version":3,"names":["Subject","OuterSubscriber","subscribeToResult","window","windowBoundaries","windowOperatorFunction","source","lift","WindowOperator","constructor","call","subscriber","windowSubscriber","WindowSubscriber","sourceSubscription","subscribe","closed","add","destination","next","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","openWindow","notifyError","error","_error","notifyComplete","_complete","_next","value","err","complete","_unsubscribe","prevWindow","newWindow"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/rxjs/_esm2015/internal/operators/window.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,MAAT,CAAgBC,gBAAhB,EAAkC;EACrC,OAAO,SAASC,sBAAT,CAAgCC,MAAhC,EAAwC;IAC3C,OAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,cAAJ,CAAmBJ,gBAAnB,CAAZ,CAAP;EACH,CAFD;AAGH;;AACD,MAAMI,cAAN,CAAqB;EACjBC,WAAW,CAACL,gBAAD,EAAmB;IAC1B,KAAKA,gBAAL,GAAwBA,gBAAxB;EACH;;EACDM,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;IACrB,MAAMM,gBAAgB,GAAG,IAAIC,gBAAJ,CAAqBF,UAArB,CAAzB;IACA,MAAMG,kBAAkB,GAAGR,MAAM,CAACS,SAAP,CAAiBH,gBAAjB,CAA3B;;IACA,IAAI,CAACE,kBAAkB,CAACE,MAAxB,EAAgC;MAC5BJ,gBAAgB,CAACK,GAAjB,CAAqBf,iBAAiB,CAACU,gBAAD,EAAmB,KAAKR,gBAAxB,CAAtC;IACH;;IACD,OAAOU,kBAAP;EACH;;AAXgB;;AAarB,MAAMD,gBAAN,SAA+BZ,eAA/B,CAA+C;EAC3CQ,WAAW,CAACS,WAAD,EAAc;IACrB,MAAMA,WAAN;IACA,KAAKf,MAAL,GAAc,IAAIH,OAAJ,EAAd;IACAkB,WAAW,CAACC,IAAZ,CAAiB,KAAKhB,MAAtB;EACH;;EACDiB,UAAU,CAACC,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2D;IACjE,KAAKC,UAAL;EACH;;EACDC,WAAW,CAACC,KAAD,EAAQH,QAAR,EAAkB;IACzB,KAAKI,MAAL,CAAYD,KAAZ;EACH;;EACDE,cAAc,CAACL,QAAD,EAAW;IACrB,KAAKM,SAAL;EACH;;EACDC,KAAK,CAACC,KAAD,EAAQ;IACT,KAAK9B,MAAL,CAAYgB,IAAZ,CAAiBc,KAAjB;EACH;;EACDJ,MAAM,CAACK,GAAD,EAAM;IACR,KAAK/B,MAAL,CAAYyB,KAAZ,CAAkBM,GAAlB;IACA,KAAKhB,WAAL,CAAiBU,KAAjB,CAAuBM,GAAvB;EACH;;EACDH,SAAS,GAAG;IACR,KAAK5B,MAAL,CAAYgC,QAAZ;IACA,KAAKjB,WAAL,CAAiBiB,QAAjB;EACH;;EACDC,YAAY,GAAG;IACX,KAAKjC,MAAL,GAAc,IAAd;EACH;;EACDuB,UAAU,GAAG;IACT,MAAMW,UAAU,GAAG,KAAKlC,MAAxB;;IACA,IAAIkC,UAAJ,EAAgB;MACZA,UAAU,CAACF,QAAX;IACH;;IACD,MAAMjB,WAAW,GAAG,KAAKA,WAAzB;IACA,MAAMoB,SAAS,GAAG,KAAKnC,MAAL,GAAc,IAAIH,OAAJ,EAAhC;IACAkB,WAAW,CAACC,IAAZ,CAAiBmB,SAAjB;EACH;;AArC0C"},"metadata":{},"sourceType":"module"}