{"ast":null,"code":"import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function retryWhen(notifier) {\n  return source => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator {\n  constructor(notifier, source) {\n    this.notifier = notifier;\n    this.source = source;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n\n}\n\nclass RetryWhenSubscriber extends OuterSubscriber {\n  constructor(destination, notifier, source) {\n    super(destination);\n    this.notifier = notifier;\n    this.source = source;\n  }\n\n  error(err) {\n    if (!this.isStopped) {\n      let errors = this.errors;\n      let retries = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n\n        try {\n          const {\n            notifier\n          } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n\n        retriesSubscription = subscribeToResult(this, retries);\n      } else {\n        this.errors = null;\n        this.retriesSubscription = null;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n      errors.next(err);\n    }\n  }\n\n  _unsubscribe() {\n    const {\n      errors,\n      retriesSubscription\n    } = this;\n\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = null;\n    }\n\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = null;\n    }\n\n    this.retries = null;\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    const {\n      _unsubscribe\n    } = this;\n    this._unsubscribe = null;\n\n    this._unsubscribeAndRecycle();\n\n    this._unsubscribe = _unsubscribe;\n    this.source.subscribe(this);\n  }\n\n}","map":{"version":3,"names":["Subject","OuterSubscriber","subscribeToResult","retryWhen","notifier","source","lift","RetryWhenOperator","constructor","call","subscriber","subscribe","RetryWhenSubscriber","destination","error","err","isStopped","errors","retries","retriesSubscription","e","_unsubscribeAndRecycle","next","_unsubscribe","unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/rxjs/_esm2015/internal/operators/retryWhen.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\nclass RetryWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    const { notifier } = this;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return super.error(e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;EAChC,OAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,iBAAJ,CAAsBH,QAAtB,EAAgCC,MAAhC,CAAZ,CAAnB;AACH;;AACD,MAAME,iBAAN,CAAwB;EACpBC,WAAW,CAACJ,QAAD,EAAWC,MAAX,EAAmB;IAC1B,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDI,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;IACrB,OAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,mBAAJ,CAAwBF,UAAxB,EAAoC,KAAKN,QAAzC,EAAmD,KAAKC,MAAxD,CAAjB,CAAP;EACH;;AAPmB;;AASxB,MAAMO,mBAAN,SAAkCX,eAAlC,CAAkD;EAC9CO,WAAW,CAACK,WAAD,EAAcT,QAAd,EAAwBC,MAAxB,EAAgC;IACvC,MAAMQ,WAAN;IACA,KAAKT,QAAL,GAAgBA,QAAhB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;EACDS,KAAK,CAACC,GAAD,EAAM;IACP,IAAI,CAAC,KAAKC,SAAV,EAAqB;MACjB,IAAIC,MAAM,GAAG,KAAKA,MAAlB;MACA,IAAIC,OAAO,GAAG,KAAKA,OAAnB;MACA,IAAIC,mBAAmB,GAAG,KAAKA,mBAA/B;;MACA,IAAI,CAACD,OAAL,EAAc;QACVD,MAAM,GAAG,IAAIjB,OAAJ,EAAT;;QACA,IAAI;UACA,MAAM;YAAEI;UAAF,IAAe,IAArB;UACAc,OAAO,GAAGd,QAAQ,CAACa,MAAD,CAAlB;QACH,CAHD,CAIA,OAAOG,CAAP,EAAU;UACN,OAAO,MAAMN,KAAN,CAAYM,CAAZ,CAAP;QACH;;QACDD,mBAAmB,GAAGjB,iBAAiB,CAAC,IAAD,EAAOgB,OAAP,CAAvC;MACH,CAVD,MAWK;QACD,KAAKD,MAAL,GAAc,IAAd;QACA,KAAKE,mBAAL,GAA2B,IAA3B;MACH;;MACD,KAAKE,sBAAL;;MACA,KAAKJ,MAAL,GAAcA,MAAd;MACA,KAAKC,OAAL,GAAeA,OAAf;MACA,KAAKC,mBAAL,GAA2BA,mBAA3B;MACAF,MAAM,CAACK,IAAP,CAAYP,GAAZ;IACH;EACJ;;EACDQ,YAAY,GAAG;IACX,MAAM;MAAEN,MAAF;MAAUE;IAAV,IAAkC,IAAxC;;IACA,IAAIF,MAAJ,EAAY;MACRA,MAAM,CAACO,WAAP;MACA,KAAKP,MAAL,GAAc,IAAd;IACH;;IACD,IAAIE,mBAAJ,EAAyB;MACrBA,mBAAmB,CAACK,WAApB;MACA,KAAKL,mBAAL,GAA2B,IAA3B;IACH;;IACD,KAAKD,OAAL,GAAe,IAAf;EACH;;EACDO,UAAU,CAACC,UAAD,EAAaC,UAAb,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,QAAjD,EAA2D;IACjE,MAAM;MAAEP;IAAF,IAAmB,IAAzB;IACA,KAAKA,YAAL,GAAoB,IAApB;;IACA,KAAKF,sBAAL;;IACA,KAAKE,YAAL,GAAoBA,YAApB;IACA,KAAKlB,MAAL,CAAYM,SAAZ,CAAsB,IAAtB;EACH;;AAnD6C"},"metadata":{},"sourceType":"module"}