{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction TimepickerComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_7_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r19);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.changeMinutes(ctx_r18.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r1.canIncrementMinutes || !ctx_r1.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_9_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.changeSeconds(ctx_r20.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r3.canIncrementSeconds || !ctx_r3.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nfunction TimepickerComponent_td_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_16_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      ctx_r22.prevDef($event);\n      return i0.ɵɵresetView(ctx_r22.changeMinutes(ctx_r22.minuteStep * ctx_r22.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_16_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.changeMinutes(ctx_r24.minuteStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_16_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.changeMinutes(-ctx_r25.minuteStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_16_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.updateMinutes($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r7.invalidMinutes);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r7.invalidMinutes);\n    i0.ɵɵproperty(\"placeholder\", ctx_r7.minutesPlaceholder)(\"readonly\", ctx_r7.readonlyInput)(\"disabled\", ctx_r7.disabled)(\"value\", ctx_r7.minutes);\n    i0.ɵɵattribute(\"aria-label\", ctx_r7.labelMinutes);\n  }\n}\n\nfunction TimepickerComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0:\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 4)(1, \"input\", 5);\n    i0.ɵɵlistener(\"wheel\", function TimepickerComponent_td_18_Template_input_wheel_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext();\n      ctx_r27.prevDef($event);\n      return i0.ɵɵresetView(ctx_r27.changeSeconds(ctx_r27.secondsStep * ctx_r27.wheelSign($event), \"wheel\"));\n    })(\"keydown.ArrowUp\", function TimepickerComponent_td_18_Template_input_keydown_ArrowUp_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.changeSeconds(ctx_r29.secondsStep, \"key\"));\n    })(\"keydown.ArrowDown\", function TimepickerComponent_td_18_Template_input_keydown_ArrowDown_1_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.changeSeconds(-ctx_r30.secondsStep, \"key\"));\n    })(\"change\", function TimepickerComponent_td_18_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.updateSeconds($event.target));\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"has-error\", ctx_r9.invalidSeconds);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-invalid\", ctx_r9.invalidSeconds);\n    i0.ɵɵproperty(\"placeholder\", ctx_r9.secondsPlaceholder)(\"readonly\", ctx_r9.readonlyInput)(\"disabled\", ctx_r9.disabled)(\"value\", ctx_r9.seconds);\n    i0.ɵɵattribute(\"aria-label\", ctx_r9.labelSeconds);\n  }\n}\n\nfunction TimepickerComponent_td_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_20_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r32.toggleMeridian());\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵproperty(\"disabled\", !ctx_r11.isEditable || !ctx_r11.canToggleMeridian);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r11.meridian, \" \");\n  }\n}\n\nfunction TimepickerComponent_td_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_26_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r34.changeMinutes(-ctx_r34.minuteStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r13.canDecrementMinutes || !ctx_r13.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\")(1, \"a\", 1);\n    i0.ɵɵlistener(\"click\", function TimepickerComponent_td_28_Template_a_click_1_listener() {\n      i0.ɵɵrestoreView(_r37);\n      const ctx_r36 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r36.changeSeconds(-ctx_r36.secondsStep));\n    });\n    i0.ɵɵelement(2, \"span\", 7);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"disabled\", !ctx_r15.canDecrementSeconds || !ctx_r15.isEditable);\n  }\n}\n\nfunction TimepickerComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1, \"\\xA0\\xA0\\xA0\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TimepickerComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\n\nfunction isValidDate(value) {\n  if (!value) {\n    return false;\n  }\n\n  if (value instanceof Date && isNaN(value.getHours())) {\n    return false;\n  }\n\n  if (typeof value === 'string') {\n    return isValidDate(new Date(value));\n  }\n\n  return true;\n}\n\nfunction isValidLimit(controls, newDate) {\n  if (controls.min && newDate < controls.min) {\n    return false;\n  }\n\n  if (controls.max && newDate > controls.max) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction toNumber(value) {\n  if (typeof value === 'undefined') {\n    return NaN;\n  }\n\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  return parseInt(value, dex);\n}\n\nfunction isNumber(value) {\n  return !isNaN(toNumber(value));\n}\n\nfunction parseHours(value, isPM = false) {\n  const hour = toNumber(value);\n\n  if (isNaN(hour) || hour < 0 || hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n    return NaN;\n  }\n\n  return hour;\n}\n\nfunction parseMinutes(value) {\n  const minute = toNumber(value);\n\n  if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n    return NaN;\n  }\n\n  return minute;\n}\n\nfunction parseSeconds(value) {\n  const seconds = toNumber(value);\n\n  if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n    return NaN;\n  }\n\n  return seconds;\n}\n\nfunction parseTime(value) {\n  if (typeof value === 'string') {\n    return new Date(value);\n  }\n\n  return value;\n}\n\nfunction changeTime(value, diff) {\n  if (!value) {\n    return changeTime(createDate(new Date(), 0, 0, 0), diff);\n  }\n\n  if (!diff) {\n    return value;\n  }\n\n  let hour = value.getHours();\n  let minutes = value.getMinutes();\n  let seconds = value.getSeconds();\n\n  if (diff.hour) {\n    hour = hour + toNumber(diff.hour);\n  }\n\n  if (diff.minute) {\n    minutes = minutes + toNumber(diff.minute);\n  }\n\n  if (diff.seconds) {\n    seconds = seconds + toNumber(diff.seconds);\n  }\n\n  return createDate(value, hour, minutes, seconds);\n}\n\nfunction setTime(value, opts) {\n  let hour = parseHours(opts.hour);\n  const minute = parseMinutes(opts.minute);\n  const seconds = parseSeconds(opts.seconds) || 0;\n\n  if (opts.isPM && hour !== 12) {\n    hour += hoursPerDayHalf;\n  }\n\n  if (!value) {\n    if (!isNaN(hour) && !isNaN(minute)) {\n      return createDate(new Date(), hour, minute, seconds);\n    }\n\n    return value;\n  }\n\n  if (isNaN(hour) || isNaN(minute)) {\n    return value;\n  }\n\n  return createDate(value, hour, minute, seconds);\n}\n\nfunction createDate(value, hours, minutes, seconds) {\n  const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds()); // #3139 ensure date part remains unchanged\n\n  newValue.setFullYear(value.getFullYear());\n  newValue.setMonth(value.getMonth());\n  newValue.setDate(value.getDate());\n  return newValue;\n}\n\nfunction padNumber(value) {\n  const _value = value.toString();\n\n  if (_value.length > 1) {\n    return _value;\n  }\n\n  return `0${_value}`;\n}\n\nfunction isHourInputValid(hours, isPM) {\n  return !isNaN(parseHours(hours, isPM));\n}\n\nfunction isMinuteInputValid(minutes) {\n  return !isNaN(parseMinutes(minutes));\n}\n\nfunction isSecondInputValid(seconds) {\n  return !isNaN(parseSeconds(seconds));\n}\n\nfunction isInputLimitValid(diff, max, min) {\n  const newDate = setTime(new Date(), diff);\n\n  if (!newDate) {\n    return false;\n  }\n\n  if (max && newDate > max) {\n    return false;\n  }\n\n  if (min && newDate < min) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n  return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\n\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n  return isHourInputValid(hours, isPM) && isMinuteInputValid(minutes) && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n  if (state.readonlyInput || state.disabled) {\n    return false;\n  }\n\n  if (event) {\n    if (event.source === 'wheel' && !state.mousewheel) {\n      return false;\n    }\n\n    if (event.source === 'key' && !state.arrowkeys) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction canChangeHours(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementHours) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementHours) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction canChangeMinutes(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementMinutes) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementMinutes) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction canChangeSeconds(event, controls) {\n  if (!event.step) {\n    return false;\n  }\n\n  if (event.step > 0 && !controls.canIncrementSeconds) {\n    return false;\n  }\n\n  if (event.step < 0 && !controls.canDecrementSeconds) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getControlsValue(state) {\n  const {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  } = state;\n  return {\n    hourStep,\n    minuteStep,\n    secondsStep,\n    readonlyInput,\n    disabled,\n    mousewheel,\n    arrowkeys,\n    showSpinners,\n    showMeridian,\n    showSeconds,\n    meridians,\n    min,\n    max\n  };\n}\n\nfunction timepickerControls(value, state) {\n  const hoursPerDay = 24;\n  const hoursPerDayHalf = 12;\n  const {\n    min,\n    max,\n    hourStep,\n    minuteStep,\n    secondsStep,\n    showSeconds\n  } = state;\n  const res = {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  };\n\n  if (!value) {\n    return res;\n  } // compare dates\n\n\n  if (max) {\n    const _newHour = changeTime(value, {\n      hour: hourStep\n    });\n\n    res.canIncrementHours = max > _newHour && value.getHours() + hourStep < hoursPerDay;\n\n    if (!res.canIncrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: minuteStep\n      });\n\n      res.canIncrementMinutes = showSeconds ? max > _newMinutes : max >= _newMinutes;\n    }\n\n    if (!res.canIncrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: secondsStep\n      });\n\n      res.canIncrementSeconds = max >= _newSeconds;\n    }\n\n    if (value.getHours() < hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: hoursPerDayHalf\n      }) < max;\n    }\n  }\n\n  if (min) {\n    const _newHour = changeTime(value, {\n      hour: -hourStep\n    });\n\n    res.canDecrementHours = min < _newHour;\n\n    if (!res.canDecrementHours) {\n      const _newMinutes = changeTime(value, {\n        minute: -minuteStep\n      });\n\n      res.canDecrementMinutes = showSeconds ? min < _newMinutes : min <= _newMinutes;\n    }\n\n    if (!res.canDecrementMinutes) {\n      const _newSeconds = changeTime(value, {\n        seconds: -secondsStep\n      });\n\n      res.canDecrementSeconds = min <= _newSeconds;\n    }\n\n    if (value.getHours() >= hoursPerDayHalf) {\n      res.canToggleMeridian = changeTime(value, {\n        hour: -hoursPerDayHalf\n      }) > min;\n    }\n  }\n\n  return res;\n}\n/** Provides default configuration values for timepicker */\n\n\nlet TimepickerConfig = /*#__PURE__*/(() => {\n  class TimepickerConfig {\n    constructor() {\n      /** hours change step */\n      this.hourStep = 1;\n      /** minutes change step */\n\n      this.minuteStep = 5;\n      /** seconds changes step */\n\n      this.secondsStep = 10;\n      /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n\n      this.showMeridian = true;\n      /** meridian labels based on locale */\n\n      this.meridians = ['AM', 'PM'];\n      /** if true hours and minutes fields will be readonly */\n\n      this.readonlyInput = false;\n      /** if true hours and minutes fields will be disabled */\n\n      this.disabled = false;\n      /** if true emptyTime is not marked as invalid */\n\n      this.allowEmptyTime = false;\n      /** if true scroll inside hours and minutes inputs will change time */\n\n      this.mousewheel = true;\n      /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n\n      this.arrowkeys = true;\n      /** if true spinner arrows above and below the inputs will be shown */\n\n      this.showSpinners = true;\n      /** show seconds in timepicker */\n\n      this.showSeconds = false;\n      /** show minutes in timepicker */\n\n      this.showMinutes = true;\n      /** placeholder for hours field in timepicker */\n\n      this.hoursPlaceholder = 'HH';\n      /** placeholder for minutes field in timepicker */\n\n      this.minutesPlaceholder = 'MM';\n      /** placeholder for seconds field in timepicker */\n\n      this.secondsPlaceholder = 'SS';\n      /** hours aria label */\n\n      this.ariaLabelHours = 'hours';\n      /** minutes aria label */\n\n      this.ariaLabelMinutes = 'minutes';\n      /** seconds aria label */\n\n      this.ariaLabelSeconds = 'seconds';\n    }\n\n  }\n\n  TimepickerConfig.ɵfac = function TimepickerConfig_Factory(t) {\n    return new (t || TimepickerConfig)();\n  };\n\n  TimepickerConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimepickerConfig,\n    factory: TimepickerConfig.ɵfac,\n    providedIn: 'root'\n  });\n  return TimepickerConfig;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TimepickerActions = /*#__PURE__*/(() => {\n  class TimepickerActions {\n    writeValue(value) {\n      return {\n        type: TimepickerActions.WRITE_VALUE,\n        payload: value\n      };\n    }\n\n    changeHours(event) {\n      return {\n        type: TimepickerActions.CHANGE_HOURS,\n        payload: event\n      };\n    }\n\n    changeMinutes(event) {\n      return {\n        type: TimepickerActions.CHANGE_MINUTES,\n        payload: event\n      };\n    }\n\n    changeSeconds(event) {\n      return {\n        type: TimepickerActions.CHANGE_SECONDS,\n        payload: event\n      };\n    }\n\n    setTime(value) {\n      return {\n        type: TimepickerActions.SET_TIME_UNIT,\n        payload: value\n      };\n    }\n\n    updateControls(value) {\n      return {\n        type: TimepickerActions.UPDATE_CONTROLS,\n        payload: value\n      };\n    }\n\n  }\n\n  TimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\n  TimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\n  TimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\n  TimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\n  TimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\n  TimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\n\n  TimepickerActions.ɵfac = function TimepickerActions_Factory(t) {\n    return new (t || TimepickerActions)();\n  };\n\n  TimepickerActions.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimepickerActions,\n    factory: TimepickerActions.ɵfac,\n    providedIn: 'platform'\n  });\n  return TimepickerActions;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst initialState = {\n  value: void 0,\n  config: new TimepickerConfig(),\n  controls: {\n    canIncrementHours: true,\n    canIncrementMinutes: true,\n    canIncrementSeconds: true,\n    canDecrementHours: true,\n    canDecrementMinutes: true,\n    canDecrementSeconds: true,\n    canToggleMeridian: true\n  }\n};\n\nfunction timepickerReducer(state = initialState, action) {\n  switch (action.type) {\n    case TimepickerActions.WRITE_VALUE:\n      {\n        return Object.assign({}, state, {\n          value: action.payload\n        });\n      }\n\n    case TimepickerActions.CHANGE_HOURS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeHours(action.payload, state.controls)) {\n          return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n          hour: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.CHANGE_MINUTES:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeMinutes(action.payload, state.controls)) {\n          return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n          minute: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.CHANGE_SECONDS:\n      {\n        if (!canChangeValue(state.config, action.payload) || !canChangeSeconds(action.payload, state.controls)) {\n          return state;\n        }\n\n        const _newTime = changeTime(state.value, {\n          seconds: action.payload.step\n        });\n\n        if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n          return state;\n        }\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.SET_TIME_UNIT:\n      {\n        if (!canChangeValue(state.config)) {\n          return state;\n        }\n\n        const _newTime = setTime(state.value, action.payload);\n\n        return Object.assign({}, state, {\n          value: _newTime\n        });\n      }\n\n    case TimepickerActions.UPDATE_CONTROLS:\n      {\n        const _newControlsState = timepickerControls(state.value, action.payload);\n\n        const _newState = {\n          value: state.value,\n          config: action.payload,\n          controls: _newControlsState\n        };\n\n        if (state.config.showMeridian !== _newState.config.showMeridian) {\n          if (state.value) {\n            _newState.value = new Date(state.value);\n          }\n        }\n\n        return Object.assign({}, state, _newState);\n      }\n\n    default:\n      return state;\n  }\n}\n\nlet TimepickerStore = /*#__PURE__*/(() => {\n  class TimepickerStore extends MiniStore {\n    constructor() {\n      const _dispatcher = new BehaviorSubject({\n        type: '[mini-ngrx] dispatcher init'\n      });\n\n      const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n      super(_dispatcher, timepickerReducer, state);\n    }\n\n  }\n\n  TimepickerStore.ɵfac = function TimepickerStore_Factory(t) {\n    return new (t || TimepickerStore)();\n  };\n\n  TimepickerStore.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: TimepickerStore,\n    factory: TimepickerStore.ɵfac,\n    providedIn: 'platform'\n  });\n  return TimepickerStore;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TimepickerComponent),\n  multi: true\n};\nlet TimepickerComponent = /*#__PURE__*/(() => {\n  class TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n      this._cd = _cd;\n      this._store = _store;\n      this._timepickerActions = _timepickerActions;\n      /** hours change step */\n\n      this.hourStep = 1;\n      /** minutes change step */\n\n      this.minuteStep = 5;\n      /** seconds change step */\n\n      this.secondsStep = 10;\n      /** if true hours and minutes fields will be readonly */\n\n      this.readonlyInput = false;\n      /** if true hours and minutes fields will be disabled */\n\n      this.disabled = false;\n      /** if true scroll inside hours and minutes inputs will change time */\n\n      this.mousewheel = true;\n      /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n\n      this.arrowkeys = true;\n      /** if true spinner arrows above and below the inputs will be shown */\n\n      this.showSpinners = true;\n      /** if true meridian button will be shown */\n\n      this.showMeridian = true;\n      /** show minutes in timepicker */\n\n      this.showMinutes = true;\n      /** show seconds in timepicker */\n\n      this.showSeconds = false;\n      /** meridian labels based on locale */\n\n      this.meridians = ['AM', 'PM'];\n      /** placeholder for hours field in timepicker */\n\n      this.hoursPlaceholder = 'HH';\n      /** placeholder for minutes field in timepicker */\n\n      this.minutesPlaceholder = 'MM';\n      /** placeholder for seconds field in timepicker */\n\n      this.secondsPlaceholder = 'SS';\n      /** emits true if value is a valid date */\n\n      this.isValid = new EventEmitter();\n      /** emits value of meridian*/\n\n      this.meridianChange = new EventEmitter(); // ui variables\n\n      this.hours = '';\n      this.minutes = '';\n      this.seconds = '';\n      this.meridian = ''; // min\\max validation for input fields\n\n      this.invalidHours = false;\n      this.invalidMinutes = false;\n      this.invalidSeconds = false; // aria-label variables\n\n      this.labelHours = 'hours';\n      this.labelMinutes = 'minutes';\n      this.labelSeconds = 'seconds'; // time picker controls state\n\n      this.canIncrementHours = true;\n      this.canIncrementMinutes = true;\n      this.canIncrementSeconds = true;\n      this.canDecrementHours = true;\n      this.canDecrementMinutes = true;\n      this.canDecrementSeconds = true;\n      this.canToggleMeridian = true; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      this.onChange = Function.prototype; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      this.onTouched = Function.prototype;\n      this.config = _config;\n      Object.assign(this, this.config);\n      this.timepickerSub = _store.select(state => state.value).subscribe(value => {\n        // update UI values if date changed\n        this._renderTime(value);\n\n        this.onChange(value);\n\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n      });\n\n      _store.select(state => state.controls).subscribe(controlsState => {\n        const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n        this.isValid.emit(isValid);\n        Object.assign(this, controlsState);\n\n        _cd.markForCheck();\n      });\n    }\n    /** @deprecated - please use `isEditable` instead */\n\n\n    get isSpinnersVisible() {\n      return this.showSpinners && !this.readonlyInput;\n    }\n\n    get isEditable() {\n      return !(this.readonlyInput || this.disabled);\n    }\n\n    resetValidation() {\n      this.invalidHours = false;\n      this.invalidMinutes = false;\n      this.invalidSeconds = false;\n    }\n\n    isPM() {\n      return this.showMeridian && this.meridian === this.meridians[1];\n    }\n\n    prevDef($event) {\n      $event.preventDefault();\n    }\n\n    wheelSign($event) {\n      return Math.sign($event.deltaY || 0) * -1;\n    }\n\n    ngOnChanges() {\n      this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n\n    changeHours(step, source = '') {\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.changeHours({\n        step,\n        source\n      }));\n    }\n\n    changeMinutes(step, source = '') {\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.changeMinutes({\n        step,\n        source\n      }));\n    }\n\n    changeSeconds(step, source = '') {\n      this.resetValidation();\n\n      this._store.dispatch(this._timepickerActions.changeSeconds({\n        step,\n        source\n      }));\n    }\n\n    updateHours(target) {\n      this.resetValidation();\n      this.hours = target.value;\n      const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n      if (!isValid) {\n        this.invalidHours = true;\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._updateTime();\n    }\n\n    updateMinutes(target) {\n      this.resetValidation();\n      this.minutes = target.value;\n      const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n      if (!isValid) {\n        this.invalidMinutes = true;\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._updateTime();\n    }\n\n    updateSeconds(target) {\n      this.resetValidation();\n      this.seconds = target.value;\n      const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n      if (!isValid) {\n        this.invalidSeconds = true;\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._updateTime();\n    }\n\n    isValidLimit() {\n      return isInputLimitValid({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      }, this.max, this.min);\n    }\n\n    isOneOfDatesIsEmpty() {\n      return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n\n    _updateTime() {\n      const _seconds = this.showSeconds ? this.seconds : void 0;\n\n      const _minutes = this.showMinutes ? this.minutes : void 0;\n\n      const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n      const isValid = this.config.allowEmptyTime ? this.isOneOfDatesIsEmpty() || isTimepickerInputValid : isTimepickerInputValid;\n\n      if (!isValid) {\n        this.isValid.emit(false);\n        this.onChange(null);\n        return;\n      }\n\n      this._store.dispatch(this._timepickerActions.setTime({\n        hour: this.hours,\n        minute: this.minutes,\n        seconds: this.seconds,\n        isPM: this.isPM()\n      }));\n    }\n\n    toggleMeridian() {\n      if (!this.showMeridian || !this.isEditable) {\n        return;\n      }\n\n      const _hoursPerDayHalf = 12;\n\n      this._store.dispatch(this._timepickerActions.changeHours({\n        step: _hoursPerDayHalf,\n        source: ''\n      }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n\n\n    writeValue(obj) {\n      if (isValidDate(obj)) {\n        this.resetValidation();\n\n        this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n      } else if (obj == null) {\n        this._store.dispatch(this._timepickerActions.writeValue());\n      }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n\n\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n\n\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n\n      this._cd.markForCheck();\n    }\n\n    ngOnDestroy() {\n      var _a;\n\n      (_a = this.timepickerSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n\n    _renderTime(value) {\n      if (!value || !isValidDate(value)) {\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = this.meridians[0];\n        this.meridianChange.emit(this.meridian);\n        return;\n      }\n\n      const _value = parseTime(value);\n\n      if (!_value) {\n        return;\n      }\n\n      const _hoursPerDayHalf = 12;\n\n      let _hours = _value.getHours();\n\n      if (this.showMeridian) {\n        this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n        this.meridianChange.emit(this.meridian);\n        _hours = _hours % _hoursPerDayHalf; // should be 12 PM, not 00 PM\n\n        if (_hours === 0) {\n          _hours = _hoursPerDayHalf;\n        }\n      }\n\n      this.hours = padNumber(_hours);\n      this.minutes = padNumber(_value.getMinutes());\n      this.seconds = padNumber(_value.getUTCSeconds());\n    }\n\n  }\n\n  TimepickerComponent.ɵfac = function TimepickerComponent_Factory(t) {\n    return new (t || TimepickerComponent)(i0.ɵɵdirectiveInject(TimepickerConfig), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(TimepickerStore), i0.ɵɵdirectiveInject(TimepickerActions));\n  };\n\n  TimepickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: TimepickerComponent,\n    selectors: [[\"timepicker\"]],\n    inputs: {\n      hourStep: \"hourStep\",\n      minuteStep: \"minuteStep\",\n      secondsStep: \"secondsStep\",\n      readonlyInput: \"readonlyInput\",\n      disabled: \"disabled\",\n      mousewheel: \"mousewheel\",\n      arrowkeys: \"arrowkeys\",\n      showSpinners: \"showSpinners\",\n      showMeridian: \"showMeridian\",\n      showMinutes: \"showMinutes\",\n      showSeconds: \"showSeconds\",\n      meridians: \"meridians\",\n      min: \"min\",\n      max: \"max\",\n      hoursPlaceholder: \"hoursPlaceholder\",\n      minutesPlaceholder: \"minutesPlaceholder\",\n      secondsPlaceholder: \"secondsPlaceholder\"\n    },\n    outputs: {\n      isValid: \"isValid\",\n      meridianChange: \"meridianChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore]), i0.ɵɵNgOnChangesFeature],\n    decls: 31,\n    vars: 33,\n    consts: [[1, \"text-center\", 3, \"hidden\"], [1, \"btn\", \"btn-link\", 3, \"click\"], [1, \"bs-chevron\", \"bs-chevron-up\"], [4, \"ngIf\"], [1, \"form-group\", \"mb-3\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"form-control\", \"text-center\", \"bs-timepicker-field\", 3, \"placeholder\", \"readonly\", \"disabled\", \"value\", \"wheel\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", \"change\"], [\"class\", \"form-group mb-3\", 3, \"has-error\", 4, \"ngIf\"], [1, \"bs-chevron\", \"bs-chevron-down\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", \"text-center\", 3, \"disabled\", \"click\"]],\n    template: function TimepickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\")(1, \"tbody\")(2, \"tr\", 0)(3, \"td\")(4, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_4_listener() {\n          return ctx.changeHours(ctx.hourStep);\n        });\n        i0.ɵɵelement(5, \"span\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(6, TimepickerComponent_td_6_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(7, TimepickerComponent_td_7_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(8, TimepickerComponent_td_8_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(9, TimepickerComponent_td_9_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(10, TimepickerComponent_td_10_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(11, TimepickerComponent_td_11_Template, 1, 0, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"tr\")(13, \"td\", 4)(14, \"input\", 5);\n        i0.ɵɵlistener(\"wheel\", function TimepickerComponent_Template_input_wheel_14_listener($event) {\n          ctx.prevDef($event);\n          return ctx.changeHours(ctx.hourStep * ctx.wheelSign($event), \"wheel\");\n        })(\"keydown.ArrowUp\", function TimepickerComponent_Template_input_keydown_ArrowUp_14_listener() {\n          return ctx.changeHours(ctx.hourStep, \"key\");\n        })(\"keydown.ArrowDown\", function TimepickerComponent_Template_input_keydown_ArrowDown_14_listener() {\n          return ctx.changeHours(-ctx.hourStep, \"key\");\n        })(\"change\", function TimepickerComponent_Template_input_change_14_listener($event) {\n          return ctx.updateHours($event.target);\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, TimepickerComponent_td_15_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(16, TimepickerComponent_td_16_Template, 2, 9, \"td\", 6);\n        i0.ɵɵtemplate(17, TimepickerComponent_td_17_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(18, TimepickerComponent_td_18_Template, 2, 9, \"td\", 6);\n        i0.ɵɵtemplate(19, TimepickerComponent_td_19_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(20, TimepickerComponent_td_20_Template, 3, 4, \"td\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"tr\", 0)(22, \"td\")(23, \"a\", 1);\n        i0.ɵɵlistener(\"click\", function TimepickerComponent_Template_a_click_23_listener() {\n          return ctx.changeHours(-ctx.hourStep);\n        });\n        i0.ɵɵelement(24, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(25, TimepickerComponent_td_25_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(26, TimepickerComponent_td_26_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(27, TimepickerComponent_td_27_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(28, TimepickerComponent_td_28_Template, 3, 2, \"td\", 3);\n        i0.ɵɵtemplate(29, TimepickerComponent_td_29_Template, 2, 0, \"td\", 3);\n        i0.ɵɵtemplate(30, TimepickerComponent_td_30_Template, 1, 0, \"td\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"disabled\", !ctx.canIncrementHours || !ctx.isEditable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"has-error\", ctx.invalidHours);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"is-invalid\", ctx.invalidHours);\n        i0.ɵɵproperty(\"placeholder\", ctx.hoursPlaceholder)(\"readonly\", ctx.readonlyInput)(\"disabled\", ctx.disabled)(\"value\", ctx.hours);\n        i0.ɵɵattribute(\"aria-label\", ctx.labelHours);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.showSpinners);\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"disabled\", !ctx.canDecrementHours || !ctx.isEditable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMinutes);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showSeconds);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMeridian);\n      }\n    },\n    dependencies: [i4.NgIf],\n    styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return TimepickerComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet TimepickerModule = /*#__PURE__*/(() => {\n  class TimepickerModule {\n    static forRoot() {\n      return {\n        ngModule: TimepickerModule,\n        providers: [TimepickerActions, TimepickerStore]\n      };\n    }\n\n  }\n\n  TimepickerModule.ɵfac = function TimepickerModule_Factory(t) {\n    return new (t || TimepickerModule)();\n  };\n\n  TimepickerModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TimepickerModule\n  });\n  TimepickerModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [TimepickerStore],\n    imports: [CommonModule]\n  });\n  return TimepickerModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };","map":{"version":3,"names":["i0","Injectable","forwardRef","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Output","NgModule","NG_VALUE_ACCESSOR","BehaviorSubject","MiniStore","MiniState","i4","CommonModule","dex","hoursPerDay","hoursPerDayHalf","minutesPerHour","secondsPerMinute","isValidDate","value","Date","isNaN","getHours","isValidLimit","controls","newDate","min","max","toNumber","NaN","parseInt","isNumber","parseHours","isPM","hour","parseMinutes","minute","parseSeconds","seconds","parseTime","changeTime","diff","createDate","minutes","getMinutes","getSeconds","setTime","opts","hours","newValue","getFullYear","getMonth","getDate","getMilliseconds","setFullYear","setMonth","setDate","padNumber","_value","toString","length","isHourInputValid","isMinuteInputValid","isSecondInputValid","isInputLimitValid","isOneOfDatesEmpty","isInputValid","canChangeValue","state","event","readonlyInput","disabled","source","mousewheel","arrowkeys","canChangeHours","step","canIncrementHours","canDecrementHours","canChangeMinutes","canIncrementMinutes","canDecrementMinutes","canChangeSeconds","canIncrementSeconds","canDecrementSeconds","getControlsValue","hourStep","minuteStep","secondsStep","showSpinners","showMeridian","showSeconds","meridians","timepickerControls","res","canToggleMeridian","_newHour","_newMinutes","_newSeconds","TimepickerConfig","constructor","allowEmptyTime","showMinutes","hoursPlaceholder","minutesPlaceholder","secondsPlaceholder","ariaLabelHours","ariaLabelMinutes","ariaLabelSeconds","ɵfac","ɵprov","TimepickerActions","writeValue","type","WRITE_VALUE","payload","changeHours","CHANGE_HOURS","changeMinutes","CHANGE_MINUTES","changeSeconds","CHANGE_SECONDS","SET_TIME_UNIT","updateControls","UPDATE_CONTROLS","initialState","config","timepickerReducer","action","Object","assign","_newTime","_newControlsState","_newState","TimepickerStore","_dispatcher","TIMEPICKER_CONTROL_VALUE_ACCESSOR","provide","useExisting","TimepickerComponent","multi","_config","_cd","_store","_timepickerActions","isValid","meridianChange","meridian","invalidHours","invalidMinutes","invalidSeconds","labelHours","labelMinutes","labelSeconds","onChange","Function","prototype","onTouched","timepickerSub","select","subscribe","_renderTime","dispatch","controlsState","isTimepickerInputValid","isOneOfDatesIsEmpty","emit","markForCheck","isSpinnersVisible","isEditable","resetValidation","prevDef","$event","preventDefault","wheelSign","Math","sign","deltaY","ngOnChanges","updateHours","target","_updateTime","updateMinutes","updateSeconds","_seconds","_minutes","toggleMeridian","_hoursPerDayHalf","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnDestroy","_a","unsubscribe","_hours","getUTCSeconds","ChangeDetectorRef","ɵcmp","NgIf","TimepickerModule","forRoot","ngModule","providers","ɵmod","ɵinj"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/ngx-bootstrap/timepicker/fesm2015/ngx-bootstrap-timepicker.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Output, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { MiniStore, MiniState } from 'ngx-bootstrap/mini-ngrx';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nconst dex = 10;\nconst hoursPerDay = 24;\nconst hoursPerDayHalf = 12;\nconst minutesPerHour = 60;\nconst secondsPerMinute = 60;\nfunction isValidDate(value) {\n    if (!value) {\n        return false;\n    }\n    if (value instanceof Date && isNaN(value.getHours())) {\n        return false;\n    }\n    if (typeof value === 'string') {\n        return isValidDate(new Date(value));\n    }\n    return true;\n}\nfunction isValidLimit(controls, newDate) {\n    if (controls.min && newDate < controls.min) {\n        return false;\n    }\n    if (controls.max && newDate > controls.max) {\n        return false;\n    }\n    return true;\n}\nfunction toNumber(value) {\n    if (typeof value === 'undefined') {\n        return NaN;\n    }\n    if (typeof value === 'number') {\n        return value;\n    }\n    return parseInt(value, dex);\n}\nfunction isNumber(value) {\n    return !isNaN(toNumber(value));\n}\nfunction parseHours(value, isPM = false) {\n    const hour = toNumber(value);\n    if (isNaN(hour) ||\n        hour < 0 ||\n        hour > (isPM ? hoursPerDayHalf : hoursPerDay)) {\n        return NaN;\n    }\n    return hour;\n}\nfunction parseMinutes(value) {\n    const minute = toNumber(value);\n    if (isNaN(minute) || minute < 0 || minute > minutesPerHour) {\n        return NaN;\n    }\n    return minute;\n}\nfunction parseSeconds(value) {\n    const seconds = toNumber(value);\n    if (isNaN(seconds) || seconds < 0 || seconds > secondsPerMinute) {\n        return NaN;\n    }\n    return seconds;\n}\nfunction parseTime(value) {\n    if (typeof value === 'string') {\n        return new Date(value);\n    }\n    return value;\n}\nfunction changeTime(value, diff) {\n    if (!value) {\n        return changeTime(createDate(new Date(), 0, 0, 0), diff);\n    }\n    if (!diff) {\n        return value;\n    }\n    let hour = value.getHours();\n    let minutes = value.getMinutes();\n    let seconds = value.getSeconds();\n    if (diff.hour) {\n        hour = hour + toNumber(diff.hour);\n    }\n    if (diff.minute) {\n        minutes = minutes + toNumber(diff.minute);\n    }\n    if (diff.seconds) {\n        seconds = seconds + toNumber(diff.seconds);\n    }\n    return createDate(value, hour, minutes, seconds);\n}\nfunction setTime(value, opts) {\n    let hour = parseHours(opts.hour);\n    const minute = parseMinutes(opts.minute);\n    const seconds = parseSeconds(opts.seconds) || 0;\n    if (opts.isPM && hour !== 12) {\n        hour += hoursPerDayHalf;\n    }\n    if (!value) {\n        if (!isNaN(hour) && !isNaN(minute)) {\n            return createDate(new Date(), hour, minute, seconds);\n        }\n        return value;\n    }\n    if (isNaN(hour) || isNaN(minute)) {\n        return value;\n    }\n    return createDate(value, hour, minute, seconds);\n}\nfunction createDate(value, hours, minutes, seconds) {\n    const newValue = new Date(value.getFullYear(), value.getMonth(), value.getDate(), hours, minutes, seconds, value.getMilliseconds());\n    // #3139 ensure date part remains unchanged\n    newValue.setFullYear(value.getFullYear());\n    newValue.setMonth(value.getMonth());\n    newValue.setDate(value.getDate());\n    return newValue;\n}\nfunction padNumber(value) {\n    const _value = value.toString();\n    if (_value.length > 1) {\n        return _value;\n    }\n    return `0${_value}`;\n}\nfunction isHourInputValid(hours, isPM) {\n    return !isNaN(parseHours(hours, isPM));\n}\nfunction isMinuteInputValid(minutes) {\n    return !isNaN(parseMinutes(minutes));\n}\nfunction isSecondInputValid(seconds) {\n    return !isNaN(parseSeconds(seconds));\n}\nfunction isInputLimitValid(diff, max, min) {\n    const newDate = setTime(new Date(), diff);\n    if (!newDate) {\n        return false;\n    }\n    if (max && newDate > max) {\n        return false;\n    }\n    if (min && newDate < min) {\n        return false;\n    }\n    return true;\n}\nfunction isOneOfDatesEmpty(hours, minutes, seconds) {\n    return hours.length === 0 || minutes.length === 0 || seconds.length === 0;\n}\nfunction isInputValid(hours, minutes = '0', seconds = '0', isPM) {\n    return isHourInputValid(hours, isPM)\n        && isMinuteInputValid(minutes)\n        && isSecondInputValid(seconds);\n}\n\nfunction canChangeValue(state, event) {\n    if (state.readonlyInput || state.disabled) {\n        return false;\n    }\n    if (event) {\n        if (event.source === 'wheel' && !state.mousewheel) {\n            return false;\n        }\n        if (event.source === 'key' && !state.arrowkeys) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction canChangeHours(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementHours) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementHours) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeMinutes(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementMinutes) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementMinutes) {\n        return false;\n    }\n    return true;\n}\nfunction canChangeSeconds(event, controls) {\n    if (!event.step) {\n        return false;\n    }\n    if (event.step > 0 && !controls.canIncrementSeconds) {\n        return false;\n    }\n    if (event.step < 0 && !controls.canDecrementSeconds) {\n        return false;\n    }\n    return true;\n}\nfunction getControlsValue(state) {\n    const { hourStep, minuteStep, secondsStep, readonlyInput, disabled, mousewheel, arrowkeys, showSpinners, showMeridian, showSeconds, meridians, min, max } = state;\n    return {\n        hourStep,\n        minuteStep,\n        secondsStep,\n        readonlyInput,\n        disabled,\n        mousewheel,\n        arrowkeys,\n        showSpinners,\n        showMeridian,\n        showSeconds,\n        meridians,\n        min,\n        max\n    };\n}\nfunction timepickerControls(value, state) {\n    const hoursPerDay = 24;\n    const hoursPerDayHalf = 12;\n    const { min, max, hourStep, minuteStep, secondsStep, showSeconds } = state;\n    const res = {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    };\n    if (!value) {\n        return res;\n    }\n    // compare dates\n    if (max) {\n        const _newHour = changeTime(value, { hour: hourStep });\n        res.canIncrementHours = max > _newHour && (value.getHours() + hourStep) < hoursPerDay;\n        if (!res.canIncrementHours) {\n            const _newMinutes = changeTime(value, { minute: minuteStep });\n            res.canIncrementMinutes = showSeconds\n                ? max > _newMinutes\n                : max >= _newMinutes;\n        }\n        if (!res.canIncrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: secondsStep });\n            res.canIncrementSeconds = max >= _newSeconds;\n        }\n        if (value.getHours() < hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: hoursPerDayHalf }) < max;\n        }\n    }\n    if (min) {\n        const _newHour = changeTime(value, { hour: -hourStep });\n        res.canDecrementHours = min < _newHour;\n        if (!res.canDecrementHours) {\n            const _newMinutes = changeTime(value, { minute: -minuteStep });\n            res.canDecrementMinutes = showSeconds\n                ? min < _newMinutes\n                : min <= _newMinutes;\n        }\n        if (!res.canDecrementMinutes) {\n            const _newSeconds = changeTime(value, { seconds: -secondsStep });\n            res.canDecrementSeconds = min <= _newSeconds;\n        }\n        if (value.getHours() >= hoursPerDayHalf) {\n            res.canToggleMeridian = changeTime(value, { hour: -hoursPerDayHalf }) > min;\n        }\n    }\n    return res;\n}\n\n/** Provides default configuration values for timepicker */\nclass TimepickerConfig {\n    constructor() {\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds changes step */\n        this.secondsStep = 10;\n        /** if true works in 12H mode and displays AM/PM. If false works in 24H mode and hides AM/PM */\n        this.showMeridian = true;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true emptyTime is not marked as invalid */\n        this.allowEmptyTime = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** hours aria label */\n        this.ariaLabelHours = 'hours';\n        /** minutes aria label */\n        this.ariaLabelMinutes = 'minutes';\n        /** seconds aria label */\n        this.ariaLabelSeconds = 'seconds';\n    }\n}\nTimepickerConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }] });\n\nclass TimepickerActions {\n    writeValue(value) {\n        return {\n            type: TimepickerActions.WRITE_VALUE,\n            payload: value\n        };\n    }\n    changeHours(event) {\n        return {\n            type: TimepickerActions.CHANGE_HOURS,\n            payload: event\n        };\n    }\n    changeMinutes(event) {\n        return {\n            type: TimepickerActions.CHANGE_MINUTES,\n            payload: event\n        };\n    }\n    changeSeconds(event) {\n        return {\n            type: TimepickerActions.CHANGE_SECONDS,\n            payload: event\n        };\n    }\n    setTime(value) {\n        return {\n            type: TimepickerActions.SET_TIME_UNIT,\n            payload: value\n        };\n    }\n    updateControls(value) {\n        return {\n            type: TimepickerActions.UPDATE_CONTROLS,\n            payload: value\n        };\n    }\n}\nTimepickerActions.WRITE_VALUE = '[timepicker] write value from ng model';\nTimepickerActions.CHANGE_HOURS = '[timepicker] change hours';\nTimepickerActions.CHANGE_MINUTES = '[timepicker] change minutes';\nTimepickerActions.CHANGE_SECONDS = '[timepicker] change seconds';\nTimepickerActions.SET_TIME_UNIT = '[timepicker] set time unit';\nTimepickerActions.UPDATE_CONTROLS = '[timepicker] update controls';\nTimepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerActions, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerActions.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerActions, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerActions, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }] });\n\nconst initialState = {\n    value: void 0,\n    config: new TimepickerConfig(),\n    controls: {\n        canIncrementHours: true,\n        canIncrementMinutes: true,\n        canIncrementSeconds: true,\n        canDecrementHours: true,\n        canDecrementMinutes: true,\n        canDecrementSeconds: true,\n        canToggleMeridian: true\n    }\n};\nfunction timepickerReducer(state = initialState, action) {\n    switch (action.type) {\n        case TimepickerActions.WRITE_VALUE: {\n            return Object.assign({}, state, { value: action.payload });\n        }\n        case TimepickerActions.CHANGE_HOURS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeHours(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { hour: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_MINUTES: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeMinutes(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, { minute: action.payload.step });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.CHANGE_SECONDS: {\n            if (!canChangeValue(state.config, action.payload) ||\n                !canChangeSeconds(action.payload, state.controls)) {\n                return state;\n            }\n            const _newTime = changeTime(state.value, {\n                seconds: action.payload.step\n            });\n            if ((state.config.max || state.config.min) && !isValidLimit(state.config, _newTime)) {\n                return state;\n            }\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.SET_TIME_UNIT: {\n            if (!canChangeValue(state.config)) {\n                return state;\n            }\n            const _newTime = setTime(state.value, action.payload);\n            return Object.assign({}, state, { value: _newTime });\n        }\n        case TimepickerActions.UPDATE_CONTROLS: {\n            const _newControlsState = timepickerControls(state.value, action.payload);\n            const _newState = {\n                value: state.value,\n                config: action.payload,\n                controls: _newControlsState\n            };\n            if (state.config.showMeridian !== _newState.config.showMeridian) {\n                if (state.value) {\n                    _newState.value = new Date(state.value);\n                }\n            }\n            return Object.assign({}, state, _newState);\n        }\n        default:\n            return state;\n    }\n}\n\nclass TimepickerStore extends MiniStore {\n    constructor() {\n        const _dispatcher = new BehaviorSubject({\n            type: '[mini-ngrx] dispatcher init'\n        });\n        const state = new MiniState(initialState, _dispatcher, timepickerReducer);\n        super(_dispatcher, timepickerReducer, state);\n    }\n}\nTimepickerStore.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerStore, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nTimepickerStore.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerStore, providedIn: 'platform' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerStore, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'platform' }]\n        }], ctorParameters: function () { return []; } });\n\nconst TIMEPICKER_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TimepickerComponent),\n    multi: true\n};\nclass TimepickerComponent {\n    constructor(_config, _cd, _store, _timepickerActions) {\n        this._cd = _cd;\n        this._store = _store;\n        this._timepickerActions = _timepickerActions;\n        /** hours change step */\n        this.hourStep = 1;\n        /** minutes change step */\n        this.minuteStep = 5;\n        /** seconds change step */\n        this.secondsStep = 10;\n        /** if true hours and minutes fields will be readonly */\n        this.readonlyInput = false;\n        /** if true hours and minutes fields will be disabled */\n        this.disabled = false;\n        /** if true scroll inside hours and minutes inputs will change time */\n        this.mousewheel = true;\n        /** if true the values of hours and minutes can be changed using the up/down arrow keys on the keyboard */\n        this.arrowkeys = true;\n        /** if true spinner arrows above and below the inputs will be shown */\n        this.showSpinners = true;\n        /** if true meridian button will be shown */\n        this.showMeridian = true;\n        /** show minutes in timepicker */\n        this.showMinutes = true;\n        /** show seconds in timepicker */\n        this.showSeconds = false;\n        /** meridian labels based on locale */\n        this.meridians = ['AM', 'PM'];\n        /** placeholder for hours field in timepicker */\n        this.hoursPlaceholder = 'HH';\n        /** placeholder for minutes field in timepicker */\n        this.minutesPlaceholder = 'MM';\n        /** placeholder for seconds field in timepicker */\n        this.secondsPlaceholder = 'SS';\n        /** emits true if value is a valid date */\n        this.isValid = new EventEmitter();\n        /** emits value of meridian*/\n        this.meridianChange = new EventEmitter();\n        // ui variables\n        this.hours = '';\n        this.minutes = '';\n        this.seconds = '';\n        this.meridian = '';\n        // min\\max validation for input fields\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n        // aria-label variables\n        this.labelHours = 'hours';\n        this.labelMinutes = 'minutes';\n        this.labelSeconds = 'seconds';\n        // time picker controls state\n        this.canIncrementHours = true;\n        this.canIncrementMinutes = true;\n        this.canIncrementSeconds = true;\n        this.canDecrementHours = true;\n        this.canDecrementMinutes = true;\n        this.canDecrementSeconds = true;\n        this.canToggleMeridian = true;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onChange = Function.prototype;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.onTouched = Function.prototype;\n        this.config = _config;\n        Object.assign(this, this.config);\n        this.timepickerSub = _store.select(state => state.value)\n            .subscribe((value) => {\n            // update UI values if date changed\n            this._renderTime(value);\n            this.onChange(value);\n            this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n        });\n        _store.select(state => state.controls)\n            .subscribe((controlsState) => {\n            const isTimepickerInputValid = isInputValid(this.hours, this.minutes, this.seconds, this.isPM());\n            const isValid = this.config.allowEmptyTime ?\n                this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n                : isTimepickerInputValid;\n            this.isValid.emit(isValid);\n            Object.assign(this, controlsState);\n            _cd.markForCheck();\n        });\n    }\n    /** @deprecated - please use `isEditable` instead */\n    get isSpinnersVisible() {\n        return this.showSpinners && !this.readonlyInput;\n    }\n    get isEditable() {\n        return !(this.readonlyInput || this.disabled);\n    }\n    resetValidation() {\n        this.invalidHours = false;\n        this.invalidMinutes = false;\n        this.invalidSeconds = false;\n    }\n    isPM() {\n        return this.showMeridian && this.meridian === this.meridians[1];\n    }\n    prevDef($event) {\n        $event.preventDefault();\n    }\n    wheelSign($event) {\n        return Math.sign($event.deltaY || 0) * -1;\n    }\n    ngOnChanges() {\n        this._store.dispatch(this._timepickerActions.updateControls(getControlsValue(this)));\n    }\n    changeHours(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeHours({ step, source }));\n    }\n    changeMinutes(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeMinutes({ step, source }));\n    }\n    changeSeconds(step, source = '') {\n        this.resetValidation();\n        this._store.dispatch(this._timepickerActions.changeSeconds({ step, source }));\n    }\n    updateHours(target) {\n        this.resetValidation();\n        this.hours = target.value;\n        const isTimepickerInputValid = isHourInputValid(this.hours, this.isPM()) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidHours = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateMinutes(target) {\n        this.resetValidation();\n        this.minutes = target.value;\n        const isTimepickerInputValid = isMinuteInputValid(this.minutes) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidMinutes = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    updateSeconds(target) {\n        this.resetValidation();\n        this.seconds = target.value;\n        const isTimepickerInputValid = isSecondInputValid(this.seconds) && this.isValidLimit();\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.invalidSeconds = true;\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._updateTime();\n    }\n    isValidLimit() {\n        return isInputLimitValid({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }, this.max, this.min);\n    }\n    isOneOfDatesIsEmpty() {\n        return isOneOfDatesEmpty(this.hours, this.minutes, this.seconds);\n    }\n    _updateTime() {\n        const _seconds = this.showSeconds ? this.seconds : void 0;\n        const _minutes = this.showMinutes ? this.minutes : void 0;\n        const isTimepickerInputValid = isInputValid(this.hours, _minutes, _seconds, this.isPM());\n        const isValid = this.config.allowEmptyTime ?\n            this.isOneOfDatesIsEmpty() || isTimepickerInputValid\n            : isTimepickerInputValid;\n        if (!isValid) {\n            this.isValid.emit(false);\n            this.onChange(null);\n            return;\n        }\n        this._store.dispatch(this._timepickerActions.setTime({\n            hour: this.hours,\n            minute: this.minutes,\n            seconds: this.seconds,\n            isPM: this.isPM()\n        }));\n    }\n    toggleMeridian() {\n        if (!this.showMeridian || !this.isEditable) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        this._store.dispatch(this._timepickerActions.changeHours({\n            step: _hoursPerDayHalf,\n            source: ''\n        }));\n    }\n    /**\n     * Write a new value to the element.\n     */\n    writeValue(obj) {\n        if (isValidDate(obj)) {\n            this.resetValidation();\n            this._store.dispatch(this._timepickerActions.writeValue(parseTime(obj)));\n        }\n        else if (obj == null) {\n            this._store.dispatch(this._timepickerActions.writeValue());\n        }\n    }\n    /**\n     * Set the function to be called when the control receives a change event.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    /**\n     * Set the function to be called when the control receives a touch event.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * This function is called when the control status changes to or from \"disabled\".\n     * Depending on the value, it will enable or disable the appropriate DOM element.\n     *\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._cd.markForCheck();\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.timepickerSub) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    _renderTime(value) {\n        if (!value || !isValidDate(value)) {\n            this.hours = '';\n            this.minutes = '';\n            this.seconds = '';\n            this.meridian = this.meridians[0];\n            this.meridianChange.emit(this.meridian);\n            return;\n        }\n        const _value = parseTime(value);\n        if (!_value) {\n            return;\n        }\n        const _hoursPerDayHalf = 12;\n        let _hours = _value.getHours();\n        if (this.showMeridian) {\n            this.meridian = this.meridians[_hours >= _hoursPerDayHalf ? 1 : 0];\n            this.meridianChange.emit(this.meridian);\n            _hours = _hours % _hoursPerDayHalf;\n            // should be 12 PM, not 00 PM\n            if (_hours === 0) {\n                _hours = _hoursPerDayHalf;\n            }\n        }\n        this.hours = padNumber(_hours);\n        this.minutes = padNumber(_value.getMinutes());\n        this.seconds = padNumber(_value.getUTCSeconds());\n    }\n}\nTimepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerComponent, deps: [{ token: TimepickerConfig }, { token: i0.ChangeDetectorRef }, { token: TimepickerStore }, { token: TimepickerActions }], target: i0.ɵɵFactoryTarget.Component });\nTimepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.6\", type: TimepickerComponent, selector: \"timepicker\", inputs: { hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondsStep: \"secondsStep\", readonlyInput: \"readonlyInput\", disabled: \"disabled\", mousewheel: \"mousewheel\", arrowkeys: \"arrowkeys\", showSpinners: \"showSpinners\", showMeridian: \"showMeridian\", showMinutes: \"showMinutes\", showSeconds: \"showSeconds\", meridians: \"meridians\", min: \"min\", max: \"max\", hoursPlaceholder: \"hoursPlaceholder\", minutesPlaceholder: \"minutesPlaceholder\", secondsPlaceholder: \"secondsPlaceholder\" }, outputs: { isValid: \"isValid\", meridianChange: \"meridianChange\" }, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], usesOnChanges: true, ngImport: i0, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"], dependencies: [{ kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'timepicker', changeDetection: ChangeDetectionStrategy.OnPush, providers: [TIMEPICKER_CONTROL_VALUE_ACCESSOR, TimepickerStore], encapsulation: ViewEncapsulation.None, template: \"<table>\\n  <tbody>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- increment hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(hourStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- increment minutes button -->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(minuteStep)\\\"\\n      ><span class=\\\"bs-chevron bs-chevron-up\\\"></span></a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- increment seconds button -->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canIncrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-up\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  <tr>\\n    <!-- hours -->\\n    <td class=\\\"form-group mb-3\\\" [class.has-error]=\\\"invalidHours\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidHours\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"hoursPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"hours\\\"\\n             (wheel)=\\\"prevDef($event);changeHours(hourStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeHours(hourStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeHours(-hourStep, 'key')\\\"\\n             (change)=\\\"updateHours($event.target)\\\" [attr.aria-label]=\\\"labelHours\\\"></td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;:&nbsp;</td>\\n    <!-- minutes -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showMinutes\\\" [class.has-error]=\\\"invalidMinutes\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidMinutes\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"minutesPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"minutes\\\"\\n             (wheel)=\\\"prevDef($event);changeMinutes(minuteStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeMinutes(minuteStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeMinutes(-minuteStep, 'key')\\\"\\n             (change)=\\\"updateMinutes($event.target)\\\" [attr.aria-label]=\\\"labelMinutes\\\">\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;:&nbsp;</td>\\n    <!-- seconds -->\\n    <td class=\\\"form-group mb-3\\\" *ngIf=\\\"showSeconds\\\" [class.has-error]=\\\"invalidSeconds\\\">\\n      <input type=\\\"text\\\" [class.is-invalid]=\\\"invalidSeconds\\\"\\n             class=\\\"form-control text-center bs-timepicker-field\\\"\\n             [placeholder]=\\\"secondsPlaceholder\\\"\\n             maxlength=\\\"2\\\"\\n             [readonly]=\\\"readonlyInput\\\"\\n             [disabled]=\\\"disabled\\\"\\n             [value]=\\\"seconds\\\"\\n             (wheel)=\\\"prevDef($event);changeSeconds(secondsStep * wheelSign($event), 'wheel')\\\"\\n             (keydown.ArrowUp)=\\\"changeSeconds(secondsStep, 'key')\\\"\\n             (keydown.ArrowDown)=\\\"changeSeconds(-secondsStep, 'key')\\\"\\n             (change)=\\\"updateSeconds($event.target)\\\" [attr.aria-label]=\\\"labelSeconds\\\">\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian -->\\n    <td *ngIf=\\\"showMeridian\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-default text-center\\\"\\n              [disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              [class.disabled]=\\\"!isEditable || !canToggleMeridian\\\"\\n              (click)=\\\"toggleMeridian()\\\"\\n      >{{ meridian }}\\n      </button>\\n    </td>\\n  </tr>\\n  <tr class=\\\"text-center\\\" [hidden]=\\\"!showSpinners\\\">\\n    <!-- decrement hours button-->\\n    <td>\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementHours || !isEditable\\\"\\n         (click)=\\\"changeHours(-hourStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showMinutes\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- decrement minutes button-->\\n    <td *ngIf=\\\"showMinutes\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementMinutes || !isEditable\\\"\\n         (click)=\\\"changeMinutes(-minuteStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- divider -->\\n    <td *ngIf=\\\"showSeconds\\\">&nbsp;</td>\\n    <!-- decrement seconds button-->\\n    <td *ngIf=\\\"showSeconds\\\">\\n      <a class=\\\"btn btn-link\\\" [class.disabled]=\\\"!canDecrementSeconds || !isEditable\\\"\\n         (click)=\\\"changeSeconds(-secondsStep)\\\">\\n        <span class=\\\"bs-chevron bs-chevron-down\\\"></span>\\n      </a>\\n    </td>\\n    <!-- space between -->\\n    <td *ngIf=\\\"showMeridian\\\">&nbsp;&nbsp;&nbsp;</td>\\n    <!-- meridian placeholder-->\\n    <td *ngIf=\\\"showMeridian\\\"></td>\\n  </tr>\\n  </tbody>\\n</table>\\n\", styles: [\".bs-chevron{border-style:solid;display:block;width:9px;height:9px;position:relative;border-width:3px 0px 0 3px}.bs-chevron-up{transform:rotate(45deg);top:2px}.bs-chevron-down{transform:rotate(-135deg);top:-2px}.bs-timepicker-field{width:65px;padding:.375rem .55rem}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: TimepickerConfig }, { type: i0.ChangeDetectorRef }, { type: TimepickerStore }, { type: TimepickerActions }]; }, propDecorators: { hourStep: [{\n                type: Input\n            }], minuteStep: [{\n                type: Input\n            }], secondsStep: [{\n                type: Input\n            }], readonlyInput: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], mousewheel: [{\n                type: Input\n            }], arrowkeys: [{\n                type: Input\n            }], showSpinners: [{\n                type: Input\n            }], showMeridian: [{\n                type: Input\n            }], showMinutes: [{\n                type: Input\n            }], showSeconds: [{\n                type: Input\n            }], meridians: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], hoursPlaceholder: [{\n                type: Input\n            }], minutesPlaceholder: [{\n                type: Input\n            }], secondsPlaceholder: [{\n                type: Input\n            }], isValid: [{\n                type: Output\n            }], meridianChange: [{\n                type: Output\n            }] } });\n\nclass TimepickerModule {\n    static forRoot() {\n        return {\n            ngModule: TimepickerModule,\n            providers: [TimepickerActions, TimepickerStore]\n        };\n    }\n}\nTimepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTimepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerModule, declarations: [TimepickerComponent], imports: [CommonModule], exports: [TimepickerComponent] });\nTimepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerModule, providers: [TimepickerStore], imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.6\", ngImport: i0, type: TimepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    declarations: [TimepickerComponent],\n                    exports: [TimepickerComponent],\n                    providers: [TimepickerStore]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TimepickerActions, TimepickerComponent, TimepickerConfig, TimepickerModule, TimepickerStore };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}