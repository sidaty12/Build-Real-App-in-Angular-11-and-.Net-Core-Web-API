{"ast":null,"code":"import { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function exhaustMap(project, resultSelector) {\n  if (resultSelector) {\n    return source => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n  }\n\n  return source => source.lift(new ExhaustMapOperator(project));\n}\n\nclass ExhaustMapOperator {\n  constructor(project) {\n    this.project = project;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n\n}\n\nclass ExhaustMapSubscriber extends OuterSubscriber {\n  constructor(destination, project) {\n    super(destination);\n    this.project = project;\n    this.hasSubscription = false;\n    this.hasCompleted = false;\n    this.index = 0;\n  }\n\n  _next(value) {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  tryNext(value) {\n    let result;\n    const index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.hasSubscription = true;\n\n    this._innerSub(result, value, index);\n  }\n\n  _innerSub(result, value, index) {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  _complete() {\n    this.hasCompleted = true;\n\n    if (!this.hasSubscription) {\n      this.destination.complete();\n    }\n\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err) {\n    this.destination.error(err);\n  }\n\n  notifyComplete(innerSub) {\n    const destination = this.destination;\n    destination.remove(innerSub);\n    this.hasSubscription = false;\n\n    if (this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n\n}","map":{"version":3,"names":["OuterSubscriber","InnerSubscriber","subscribeToResult","map","from","exhaustMap","project","resultSelector","source","pipe","a","i","b","ii","lift","ExhaustMapOperator","constructor","call","subscriber","subscribe","ExhaustMapSubscriber","destination","hasSubscription","hasCompleted","index","_next","value","tryNext","result","err","error","_innerSub","innerSubscriber","add","innerSubscription","undefined","_complete","complete","unsubscribe","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","next","notifyError","notifyComplete","remove"],"sources":["C:/DevSid/Projet/App-Angular/my-first-app/node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js"],"sourcesContent":["import { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        return (source) => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new ExhaustMapOperator(project));\n}\nclass ExhaustMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n}\nclass ExhaustMapSubscriber extends OuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    }\n    tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.hasSubscription = true;\n        this._innerSub(result, value, index);\n    }\n    _innerSub(result, value, index) {\n        const innerSubscriber = new InnerSubscriber(this, value, index);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete(innerSub) {\n        const destination = this.destination;\n        destination.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}