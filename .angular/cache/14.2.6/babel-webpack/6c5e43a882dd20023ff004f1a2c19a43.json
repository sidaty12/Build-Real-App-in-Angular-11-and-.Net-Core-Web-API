{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let FilterPipe = /*#__PURE__*/(() => {\n  class FilterPipe {\n    transform(value, filterString, propName) {\n      const resultArray = [];\n\n      if ((value === null || value === void 0 ? void 0 : value.length) === 0 || filterString === '' || propName === '') {\n        return value;\n      }\n\n      console.log('value', value);\n\n      for (const item of value) {\n        if (item[propName] === filterString) {\n          resultArray.push(item);\n          console.log(resultArray);\n        }\n      }\n\n      return resultArray;\n    }\n\n  }\n\n  FilterPipe.ɵfac = function FilterPipe_Factory(t) {\n    return new (t || FilterPipe)();\n  };\n\n  FilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"filter\",\n    type: FilterPipe,\n    pure: true\n  });\n  return FilterPipe;\n})();","map":{"version":3,"mappings":";AAKA,WAAaA,UAAb;EAAM,MAAOA,UAAP,CAAiB;IAErBC,SAAS,CAACC,KAAD,EAAeC,YAAf,EAAqCC,QAArC,EAAqD;MAC5D,MAAMC,WAAW,GAAG,EAApB;;MACA,IAAG,MAAK,SAAL,SAAK,WAAL,GAAK,MAAL,QAAK,CAAEC,MAAP,MAAkB,CAAlB,IAAuBH,YAAY,KAAK,EAAxC,IAA8CC,QAAQ,KAAK,EAA9D,EAAiE;QAC/D,OAAOF,KAAP;MACD;;MACLK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,KAArB;;MACI,KAAK,MAAMO,IAAX,IAAmBP,KAAnB,EAAyB;QACvB,IAAIO,IAAI,CAACL,QAAD,CAAJ,KAAmBD,YAAvB,EAAoC;UAClCE,WAAW,CAACK,IAAZ,CAAiBD,IAAjB;UACAF,OAAO,CAACC,GAAR,CAAYH,WAAZ;QACD;MACF;;MAED,OAAOA,WAAP;IAGD;;EAlBoB;;;qBAAVL;EAAU;;;;UAAVA;IAAUW;;EAAvB,OAAaX,UAAb;AAAA","names":["FilterPipe","transform","value","filterString","propName","resultArray","length","console","log","item","push","pure"],"sourceRoot":"","sources":["C:\\DevSid\\Projet\\App-Angular\\my-first-app\\src\\app\\Pipes\\filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filterString: string, propName: string): any[] {\n    const resultArray = [];\n    if(value?.length === 0 || filterString === '' || propName === ''){\n      return value;\n    }\nconsole.log('value', value);\n    for (const item of value){\n      if (item[propName] === filterString){\n        resultArray.push(item);\n        console.log(resultArray)\n      }\n    }\n\n    return resultArray;\n\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}