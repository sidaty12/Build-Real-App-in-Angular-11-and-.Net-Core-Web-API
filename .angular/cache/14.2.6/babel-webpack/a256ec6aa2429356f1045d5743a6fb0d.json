{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    // baseUrl = environment.baseUrl;\n    constructor() {}\n\n    authUser(user) {\n      let UserArray = [];\n\n      if (localStorage.getItem('Users')) {\n        UserArray = JSON.parse(localStorage.getItem('Users'));\n      } //console.log(UserArray);\n      // tslint:disable-next-line: triple-equals\n\n\n      return UserArray.find(p => p.userName === user.userName && p.password === user.password); //  return this.http.post(this.baseUrl + '/account/login', user);\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":{"version":3,"mappings":";AAKA,WAAaA,WAAb;EAAM,MAAOA,WAAP,CAAkB;IAEpB;IACAC,eAAiB;;IAEjBC,QAAQ,CAACC,IAAD,EAAU;MAEhB,IAAIC,SAAS,GAAG,EAAhB;;MACA,IAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;QAEjCF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;MACP,CANqB,CAQtB;MACM;;;MACA,OAAOF,SAAS,CAACK,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeR,IAAI,CAACQ,QAApB,IAAgCD,CAAC,CAACE,QAAF,KAAeT,IAAI,CAACS,QAAxE,CAAP,CAVgB,CAWhB;IAED;;EAlBmB;;;qBAAXZ;EAAW;;;WAAXA;IAAWa,SAAXb,WAAW;IAAAc,YAFR;;EAEhB,OAAad,WAAb;AAAA","names":["AuthService","constructor","authUser","user","UserArray","localStorage","getItem","JSON","parse","find","p","userName","password","factory","providedIn"],"sourceRoot":"","sources":["C:\\DevSid\\Projet\\App-Angular\\my-first-app\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n    // baseUrl = environment.baseUrl;\r\n    constructor() { }\r\n\r\n    authUser(user: any ) {\r\n\r\n      let UserArray = [];\r\n      if (localStorage.getItem('Users')) {\r\n\r\n        UserArray = JSON.parse(localStorage.getItem('Users'));\r\n}\r\n\r\n//console.log(UserArray);\r\n      // tslint:disable-next-line: triple-equals\r\n      return UserArray.find(p => p.userName === user.userName && p.password === user.password);\r\n      //  return this.http.post(this.baseUrl + '/account/login', user);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}